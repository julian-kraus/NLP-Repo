Index: dialog.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from utils import *\r\nimport numpy as np\r\nfrom numpy.linalg import norm\r\nimport sys\r\nimport os\r\n\r\n\r\nclass Dialog:\r\n\r\n    def __init__(self):\r\n        self.data = data.copy()\r\n        self.history = []\r\n        self.check_data_vec = self.compute_vec_list(input_possible_values(check_data_questions))\r\n        self.repeat_question_vec = self.compute_vec_list(repeat_info_questions)\r\n        self.goodbye_question_vec = self.compute_vec_list(stop_statements)\r\n        os.system('clear')\r\n        os.system('cls')\r\n\r\n        self.say(\"Hello, I am CV-Bot. I am here to help you create your CV.\")\r\n        self.converse()\r\n\r\n    \"\"\" Used for interaction with the user\"\"\"\r\n\r\n    def say(self, text):\r\n        format_ = '\\033[33;1m'\r\n        end = '\\033[0m'\r\n        print(format_ + text + end)\r\n\r\n    def request(self, text):\r\n        format_ = '\\033[33;1m'\r\n        end = '\\033[0m'\r\n        return input(format_ + text + end)\r\n\r\n    \"\"\" --------------------------------------- \"\"\"\r\n\r\n    def print_debug(self, text):\r\n        if debug_info:\r\n            format_ = '\\033[31m'\r\n            end = '\\033[0m'\r\n            print(\"DEBUG: \" + format_ + text + end)\r\n\r\n    def compute_vec_list(self, list):\r\n        return [nlp(elem).vector for elem in list]\r\n\r\n    \"\"\" Interact with the history \"\"\"\r\n\r\n    def get_current_stage_name(self):\r\n        stage, _ = self.history[-1]\r\n        return stage\r\n\r\n    def get_current_stage_data(self):\r\n        return self.data[self.get_current_stage_name()]\r\n\r\n    def get_previous_stage(self):\r\n        if len(self.history) > 1:\r\n            stage, _ = self.history[-1]\r\n            return stage\r\n        else:\r\n            self.say(\"Sorry i didn't find any previous data.\")\r\n            return None\r\n\r\n    def add_new_stage(self, position):\r\n        self.history.append((position, []))\r\n\r\n    def get_current_question_name(self):\r\n        _, questions = self.history[-1]\r\n        return questions[-1]\r\n\r\n    def get_current_question_data(self):\r\n        return self.data[self.get_current_stage_name()][self.get_current_question_name()]\r\n\r\n    def get_previous_question_name(self):\r\n        _, questions = self.history[-1]\r\n        if len(questions) > 1:\r\n            return questions[-2]\r\n        else:\r\n            if len(self.history) > 1:\r\n                return self.history[-2][1][-1]\r\n            return self.handle_error(\"\", no_prev_error)\r\n\r\n    def add_question_to_history(self, question):\r\n        self.history[-1][1].append(question)\r\n\r\n    \"\"\" --------------------------------------- \"\"\"\r\n\r\n    def print_data(self, elem):\r\n        string = self.get_data_as_string(elem)\r\n        if string != \"\":\r\n            print(string, end=\"\")\r\n\r\n    def get_data_as_string(self, elem):\r\n        if elem is None:\r\n            return\r\n        text = \"\"\r\n        for stage in self.data.keys():\r\n\r\n            stage_text = \"\"\r\n            if stage.__contains__(elem):\r\n                stage_text += stage + \":\\n\"\r\n\r\n            for sub_stage in self.data[stage]:\r\n                if stage.__contains__(elem) or sub_stage.__contains__(elem):\r\n                    sub_stage_text = sub_stage + \":\"\r\n                    for data in list(self.data[stage][sub_stage][1].values()):\r\n                        if data:\r\n                            sub_stage_text += \" \" + str(data)\r\n                    if sub_stage_text != sub_stage + \":\":\r\n                        stage_text += sub_stage_text + \"\\n\"\r\n            if stage_text and stage_text != stage + \":\\n\":\r\n                text += stage_text\r\n        return text\r\n\r\n    # agent starts to speak with user\r\n    def converse(self):\r\n        for position in self.data.keys():\r\n            # add the new stage to the history\r\n            self.add_new_stage(position)\r\n            self.say(\"Now we are going to go to your \" + position)\r\n            # get the value of the dict of the current stage (eg, Name, Birthdate ...)\r\n            current_stage = self.get_current_stage_data()\r\n            # go through all questions for the current stage, e.g. What is your name?\r\n            for question in list(current_stage):\r\n                # get processed input by user\r\n                self.add_question_to_history(question)\r\n                processed_input = self.understand(self.ask(question, None))\r\n\r\n                self.print_debug(\"Processed input: \" + str(processed_input))\r\n\r\n                # store data\r\n                current_question = self.get_current_question_data()\r\n                data_dict = current_question[data_store]\r\n\r\n                self.map_data(data_dict, processed_input, question)\r\n\r\n                # education and working experience\r\n                self.sev_bullet_points(question)\r\n\r\n        self.goodbye()\r\n\r\n        # ask according to the current position\r\n    def ask(self, question, data_missing):\r\n        # get the answer from the user or from the debug data\r\n        current_question = self.get_current_question_data()\r\n        if debug_text:\r\n            self.say(current_question[question_num])\r\n            answer = debug_text_data[debug_text_num].pop(0)\r\n            print(answer)\r\n        else:\r\n            if data_missing is not None:\r\n                answer = self.request(str(data_missing) + ' - question: ' + current_question[question_num] + \"\\n\")\r\n            else:\r\n                answer = self.request(current_question[question_num] + \"\\n\")\r\n\r\n        self.print_debug(\"Received answer: \" + answer)\r\n\r\n        if answer == \"\":\r\n            self.say(\"Sorry I didn't quite catch that.\")\r\n            return self.ask(question, data_missing)\r\n        return answer\r\n\r\n    def understand(self, user_input):\r\n        type, data = self.classify(user_input)\r\n\r\n        self.print_debug(\"Classified input type:\" + type)\r\n\r\n        if type == \"check_data\":\r\n            self.print_data(data)\r\n            return self.understand(self.ask(self.get_current_question_name(), None))\r\n        elif type == \"goodbye\":\r\n            self.goodbye()\r\n        elif type == \"repeat\":\r\n            self.say(\"Sure, no problem.\")\r\n            return self.understand(self.ask(self.get_current_question_name(), None))\r\n        else:\r\n            return self.get_data(data)\r\n\r\n    def classify(self, user_input):\r\n        user_vec = nlp(user_input).vector\r\n        check_sim = self.similarity(user_vec, self.check_data_vec)\r\n        repeat_sim = self.similarity(user_vec, self.repeat_question_vec)\r\n        goodbye_sim = self.similarity(user_vec, self.goodbye_question_vec)\r\n        max_sim = max(check_sim, repeat_sim, goodbye_sim)\r\n        if max_sim < threshold:\r\n            max_sim = 0\r\n\r\n        self.print_debug(\"Similarities check_sim: \" + str(check_sim) + \", repeat_sim: \" + str(\r\n            repeat_sim) + \" goodbye_sim: \" + str(goodbye_sim))\r\n\r\n        if max_sim == 0:\r\n            return \"answer\", user_input\r\n        elif max_sim == check_sim:\r\n            return \"check_data\", self.get_check_data(user_input)\r\n        elif max_sim == repeat_sim:\r\n            return \"repeat\", None\r\n        else:\r\n            return \"goodbye\", None\r\n\r\n    def similarity(self, elem_vec, ls_vec):\r\n        # Computes the max cosine similarity of the elem_vec to one of the ls_vecs\r\n        max_sim = 0.0\r\n        for vec in ls_vec:\r\n            new_sim = np.dot(elem_vec, vec) / (norm(elem_vec) * norm(vec))\r\n            if new_sim > max_sim:\r\n                max_sim = new_sim\r\n        return max_sim\r\n\r\n    def get_check_data(self, user_input):\r\n        # Check for previous\r\n        if self.check_input_for_words(user_input, check_prev):\r\n            # Check for previous stage\r\n            if self.check_input_for_words(user_input, check_stage):\r\n                return self.get_previous_stage()\r\n            else:\r\n                # Otherwise question\r\n                return self.get_previous_question_name()\r\n        # Check for all\r\n        elif self.check_input_for_words(user_input, check_all):\r\n            return \"\"\r\n        else:\r\n            # Check stage keys\r\n            for key in self.data.keys():\r\n                if self.check_input_for_words(user_input, data_keys[key]):\r\n                    return key\r\n                # Check question keys except the bulletpoints\r\n                for q in self.data[key].keys():\r\n                    if q == \"1\":\r\n                        break\r\n                    if self.check_input_for_words(user_input, data_keys[q]):\r\n                        return q\r\n            return self.noCheckDataFound()\r\n\r\n    def noCheckDataFound(self):\r\n        self.say(\"Sorry unfortunately we couldn't find the data you were looking for.\")\r\n        new_input = input(\"Do you want to continue or try again? \\n\")\r\n        if self.check_input_for_words(new_input, check_again):\r\n            return self.classify(self.request(\"Please state your request again. \\n\"))\r\n        else:\r\n            return None\r\n\r\n    def check_input_for_words(self, user_input, words):\r\n        return any(str.lower(ele) in str.lower(user_input) for ele in words)\r\n\r\n    def get_data(self, input):\r\n        user_data = []\r\n        if self.get_current_question_name() == \"Address\":\r\n            try:\r\n                test = re.search(address_re, input).group()\r\n                return [(\"Address\", re.search(address_re, input).group())]\r\n            except AttributeError:\r\n                return None\r\n        elif self.get_current_question_name() == \"E-Mail\":\r\n            try:\r\n                return [(\"E-Mail\", re.search(mail_re, input).group())]\r\n            except AttributeError:\r\n                return None\r\n\r\n        # check if we are only looking for regex and not the SpaCy model\r\n        current_question = self.get_current_question_data()\r\n        necessary_entities = [element for innerList in current_question[fun_num].keys() for element in\r\n                              innerList]\r\n        doc = nlp(input)\r\n        for entity in doc.ents:\r\n            for type in necessary_entities:\r\n                if entity.label_ == type:\r\n                    user_data.append(tuple((type, entity.text)))\r\n\r\n        # when filtering dates remove possibly created duplicates\r\n        user_data = list(set([i for i in user_data]))\r\n        return user_data\r\n\r\n    def map_data(self, data_dict, processed_input, question):\r\n        for key, value in data_dict.items():\r\n            for inp in list(processed_input):\r\n                if inp[0] in key:\r\n                    data_dict[key] = inp[1]\r\n                    processed_input.remove(inp)\r\n                    break\r\n        # check if all necessary information are given\r\n        for key, value in data_dict.items():\r\n            # value missing?\r\n            if value == None:\r\n                # until we have fitting input keep asking\r\n                while True:\r\n                    question_missing_info = 'The following information seems to be missing: ' + str(\r\n                        key[0]) + ' Please enter the information: \\n'\r\n                    processed_input = self.understand(self.ask(question, question_missing_info))\r\n                    if len(processed_input) != 0:\r\n                        data_dict[key] = processed_input[0][1]\r\n                        break;\r\n\r\n    def sev_bullet_points(self, question):\r\n        counter = 0\r\n        position = self.get_current_stage_name()\r\n        if position == 'Education' or position == 'Experience':\r\n            while True:\r\n                q = 'If you would like to add another ' + str(position) + 'step enter the information in the same ' \\\r\n                                                                          'format as already done. Otherwise press ' \\\r\n                                                                          'Enter \\n '\r\n                if debug_text:\r\n                    inp = debug_text_data[debug_text_num].pop()\r\n                else:\r\n                    inp = self.request(q)\r\n\r\n                if inp == \"\":\r\n                    break\r\n                else:\r\n                    # process the given input\r\n                    processed_input = self.understand(inp)\r\n\r\n                    # create new dictionary element\r\n\r\n                    stage = self.get_current_stage_data()\r\n                    stage[(str(counter + 2))] = [q,\r\n                                                 {(\"DATE\", \"CARDINAL\", '1'): None,\r\n                                                  (\"DATE\", \"CARDINAL\", '2'): None,\r\n                                                  (\"ORG\", \"\"): None}]\r\n                    self.add_question_to_history((str(counter + 2)))\r\n                    current_question = self.get_current_question_data()\r\n                    data_dict = current_question[data_store]\r\n\r\n                    self.print_debug(\r\n                        self.get_current_question_name() + \"\\n\" + str(data_dict) + \"\\n\" + current_question + \"\\n\" + str(\r\n                            self.get_current_question_data()))\r\n\r\n                    self.map_data(data_dict, processed_input, question)\r\n\r\n                self.print_debug(str(data))\r\n\r\n    def goodbye(self):\r\n        self.say(\"I hope I could help you with your CV. Until another time.\")\r\n        cv = self.get_data_as_string(\"\")\r\n        if cv:\r\n            self.say(\"I'll print your CV so you can use it for your next application.\\n\")\r\n            print(\"C I R R I C U L U M   V I T A E\\n\")\r\n            print(cv)\r\n        self.say(\"Goodbye!\\n\")\r\n        sys.exit()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dialog.py b/dialog.py
--- a/dialog.py	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ b/dialog.py	(date 1670085169059)
@@ -198,6 +198,7 @@
     def similarity(self, elem_vec, ls_vec):
         # Computes the max cosine similarity of the elem_vec to one of the ls_vecs
         max_sim = 0.0
+        max_sim_lst = [(np.dot(elem_vec, vec) / (norm(elem_vec) * norm(vec)), vec) for vec in ls_vec]
         for vec in ls_vec:
             new_sim = np.dot(elem_vec, vec) / (norm(elem_vec) * norm(vec))
             if new_sim > max_sim:
Index: readme.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Readme\r\n## Cv-Bot\r\n\r\n### Current status\r\nCurrent features: \r\n- Entered wrong format? \r\n    - Ask question for missing information\r\n- Ask for data to be displayed\r\n  - Previous or specific or all works, regardless whether it is a question or stage\r\n  - If it doesn't get recognized, user gets the possibility to enter again or continue\r\n- Multiple continuous points for education and work experience\r\n\r\n#### Goal:\r\n\r\nThe goal is to create, based on the information the user has given with the input fields, to create a CV containing all \r\nnecessary personal information. Therefore, the CV has a defined structure which can be viewed in the utils.py File.\r\nPart of the project is using trained pipelines/models\r\n\r\n#### Execution: \r\nYou need to have the package spaCy. Here is the installation guide https://spacy.io/usage \r\nTo execute the CV-Bot you can either set the debug variable in utils.py to True and then run the main class (There is already example input and you dont need to enter any information via the input field). \r\nOr you can set the variable to False and the enter your own input. \r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/readme.md b/readme.md
--- a/readme.md	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ b/readme.md	(date 1670087264299)
@@ -12,6 +12,29 @@
 
 #### Goal:
 
+!!!! Check if date checking is important (32.12.2001)
+!!!! First check if it contains answer?
+!!!! Get email fails with @ or @gmail.com
+!!!! Doesn't recognize 05/11/2001
+!!!! Make adress question more detailed, only street and number
+!!!! Typo in education -> a end date => an end date
+!!!! Typo in Educationstep (another step) => also a comma after it
+!!!! Add to check question Can you repeat my X?
+!!!! What is my adress again?  
+Sorry unfortunately we couldn't find the data you were looking for.
+Do you want to continue or try again?
+What is my address again? 
+Please state your request again. 
+What is my address again?
+=> Leads to an error
+!!! Doesn't find anything to print -> say something?
+!!! Only recognizes two name
+!!! Which day was i born? for check data
+!!! What to do about 2000/2000 as birthdate
+Show me everything/Show me all -> leads error
+
+
+
 The goal is to create, based on the information the user has given with the input fields, to create a CV containing all 
 necessary personal information. Therefore, the CV has a defined structure which can be viewed in the utils.py File.
 Part of the project is using trained pipelines/models
Index: utils.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import spacy\r\nimport re\r\n\r\nimport contextlib\r\n\r\nwith contextlib.redirect_stdout(None): # Todo check how to do that\r\n    spacy.cli.download(\"en_core_web_sm\")\r\nnlp = spacy.load('en_core_web_sm')\r\n\r\n\r\n\r\n\r\n# filter for valid inputs by user\r\nmail_re = \".+@.+\\..+\"\r\naddress_re = \"[A-Z]+[a-z]+.? [0-9]+\"\r\n# Error codes\r\ncheck_data_error = \"check_data_not_found\"\r\nno_prev_error = \"prev\"\r\n\r\nquestion_num = 0\r\nfun_num = 1\r\ndata_num = 2\r\ndebug_info = True\r\ndebug_text = False\r\ndebug_text_num = 0\r\ndata_store = 1\r\nthreshold = 0.6\r\n\r\n\r\ndata = {\"Personal Data\":\r\n    {\r\n        \"Name\": [\"What is your full name?\", {(\"PERSON\", \"\"): None}],\r\n        \"Birthdate\": [\"What is your date of birth?\", {(\"DATE\", \"CARDINAL\"): None}],\r\n        \"E-Mail\": [\"Please tell me your email.\", {(\"E-Mail\", \"\"): None}],\r\n        \"Address\": [\"Please state your address.\", {(\"Address\", \"\"): None}]\r\n    },\r\n    \"Education\":\r\n        {\r\n            \"1\": [\"Please state an education step containing the teaching institution, a start date \"\r\n                  \"and a end date.\",\r\n                  {(\"DATE\", \"CARDINAL\", '1'): None,\r\n                   (\"DATE\", \"CARDINAL\", '2'): None,\r\n                   (\"ORG\", \"\"): None}]\r\n        },\r\n    \"Experience\":\r\n        {\r\n            \"1\": [\"Please state an step of your working experience containing the company, a start date \"\r\n                  \"and a end date.\",\r\n                  {(\"DATE\", \"CARDINAL\", '1'): None,\r\n                   (\"DATE\", \"CARDINAL\", '2'): None,\r\n                   (\"ORG\", \"\"): None}]\r\n        },\r\n    \"Social Engagement\":\r\n        {\r\n            \"1\": [\"Please state a social engagement step containing the the institution, a start date \"\r\n                  \"and a end date.\",\r\n                  {(\"DATE\", \"CARDINAL\", '1'): None,\r\n                   (\"DATE\", \"CARDINAL\", '2'): None,\r\n                   (\"ORG\", \"\"): None}]\r\n        },\r\n    \"Skills\":\r\n        {\r\n            \"Skills\": [\"Please state skills you would liked mentioned in your CV.\",\r\n                       {(\"DATE\", \"CARDINAL\"): None,\r\n                        (\"DATE\", \"CARDINAL\"): None,\r\n                        (\"ORG\", \"\"): None}]\r\n        },\r\n    \"Interests\":\r\n        {\r\n            \"Interests\": [\"If you would like to state any personal interests in your CV please enter them here: \",\r\n                          {(\"DATE\", \"CARDINAL\"): None,\r\n                           (\"DATE\", \"CARDINAL\"): None,\r\n                           (\"ORG\", \"\"): None}]\r\n        }\r\n}\r\n\r\n\r\ncheck_data_questions = [\"Can you show me what I entered for X?\",\r\n                        \"What did you put as X?\", \"Show me my X.\",\r\n                        \"What are my X?\",\r\n                        \"Tell me about X.\"\r\n                        \"Show me the last questions stage.\"\r\n                        \"What was saved in the X?\",\r\n                        \"What did I answer in the previous question?\"\r\n                        ]\r\n\r\nrepeat_info_questions = [\"Can you please repeat that.\",\r\n                         \"State the question again.\",\r\n                         \"Can you repeat the question?\",\r\n                         \"I didn't catch that.\"\r\n                         \"I want to hear it once more.\"\r\n                         \"Show it once more.\"\r\n                         ]\r\n\r\nstop_statements = [\"I want to stop\",\r\n                   \"I am finished\",\r\n                   \"Stop the dialog\",\r\n                   \"Goodbye\",\r\n                   \"Bye\",\r\n                   \"It is over\"\r\n                   ]\r\n\r\ncheck_prev = [\"last\", \"previous\", \"before\"]\r\ncheck_stage = [\"stage\", \"phase\", \"section\"]\r\ncheck_again = [\"again\", \"more\"]\r\ncheck_all = [\"all\", \"every\", \"full\"]\r\n\r\ndata_keys = {\r\n    \"Personal Data\": [\"Personal\", \"Personal\", \"About me\"],\r\n    \"Name\": [\"Name\", \"called\"],\r\n    \"Birthdate\": [\"Date\", \"Birth\", \"Born\"],\r\n    \"E-Mail\": [\"Mail\"],\r\n    \"Address\": [\"Address\", \"Residence\", \"Home\", \"live\"],\r\n    \"Education\": [\"Education\", \"School\", \"University\"],\r\n    \"Skills\": [\"Skill\", \"Action\", \"Capabilities\"],\r\n    \"Social Engagement\": [\"Social\", \"Engagement\"],\r\n    \"Experience\": [\"Experience\"],\r\n    \"Interests\": [\"Interests\"]\r\n}\r\n\r\ndef input_possible_values(lst):\r\n    values = list(data_keys.values())\r\n    result_list = []\r\n    for elem in lst:\r\n        if \"X\" in elem:\r\n            for val in [i for sub in values for i in sub]:\r\n                result_list.append(str.replace(elem, \"X\", val))\r\n        else:\r\n            result_list.append(elem)\r\n    return result_list\r\n\r\n\r\n\r\n\r\n# Error codes\r\ncheck_data_error = \"check_data_not_found\"\r\nno_prev_error = \"prev\"\r\n\r\nquestion_num = 0\r\nfun_num = 1\r\ndata_num = 2\r\ndebug_info = True\r\ndebug_text = False\r\ndebug_text_num = 0\r\ndata_store = 1\r\nthreshold = 0.6\r\n\r\ndebug_text_data = [\r\n    [\"Max Mustermann\",\r\n     \"20/12/2017\",\r\n     \"abc@gmail.com\",\r\n     \"Bauerstr. 4\",\r\n     \"From 2010 to 2019 I went to the Louise Schroeder School in Germany.\",\r\n     \"After that starting in 2020 I started my studies at the Technical University of Munich until 2023.\",\r\n     \"\",\r\n     \"From 2010 to 2019 I went to the Louise Schroeder School in Germany.\",\r\n     \"After that starting in 2020 I started my studies at the Technical University of Munich until 2023.\",\r\n     \"From 2022 to 2022 it did an exchange abroad at the University Pompue Fabra\",\r\n     \"\",\r\n     \"Programming and Languages\",\r\n     \"Programming and Languages\",\r\n     \"\",\r\n     \"Programming and Languages\",\r\n     \"Programming and Languages\",\r\n     \"\",\r\n     \"Goodbye\"]\r\n]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/utils.py b/utils.py
--- a/utils.py	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ b/utils.py	(date 1670085327697)
@@ -20,11 +20,11 @@
 question_num = 0
 fun_num = 1
 data_num = 2
-debug_info = True
+debug_info = False
 debug_text = False
 debug_text_num = 0
 data_store = 1
-threshold = 0.6
+threshold = 0.7
 
 
 data = {"Personal Data":
@@ -79,7 +79,8 @@
                         "What did you put as X?", "Show me my X.",
                         "What are my X?",
                         "Tell me about X."
-                        "Show me the last questions stage."
+                        "Show me the last questions stage.",
+                        "What did you put in last?"
                         "What was saved in the X?",
                         "What did I answer in the previous question?"
                         ]
@@ -139,8 +140,7 @@
 question_num = 0
 fun_num = 1
 data_num = 2
-debug_info = True
-debug_text = False
+
 debug_text_num = 0
 data_store = 1
 threshold = 0.6
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_14_47_[Changes]1/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_14_47_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_14_47_[Changes]1/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_14_47_[Changes]1/shelved.patch	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ /dev/null	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
@@ -1,106 +0,0 @@
-Index: utils.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/utils.py b/utils.py
---- a/utils.py	
-+++ b/utils.py	
-@@ -60,33 +60,26 @@
-     {
-         "Name": ["What is your full name?", {("PERSON", ""): None}],
-         "Birthdate": ["What is your date of birth?", {("DATE", "CARDINAL"): None}],
--        "E-Mail": ["Please tell me your email.", lambda t: re.search(mail_re, t).group(), None],
--        "Address": ["Please state your address.", lambda t: re.search(address_re, t).group(), None]
-+        "E-Mail": ["Please tell me your email.", {("E-Mail", ""): None}],
-+        "Address": ["Please state your address.", {("Address", "CARDINAL"): None}]
-     },
-     "Education":
-         {
--            "Education_history": ["Please state your educational steps in the form of a "
--                                  "continuous text. For each educational step please enter a time frame, "
--                                  "the educational step and the name of the teaching institution",
--                                  {("DATE", "CARDINAL"): None,
--                                   ("DATE", "CARDINAL"): None,
--                                   ("ORG", ""): None}]
-+            "Step 1": ["PLease state an education step containing the teaching institution, a start date "
-+                       "and a end date.",
-+                       {("DATE", "CARDINAL"): None}]
-         },
-     "Experience":
-         {
--            "Experience_history": ["Please state your work experience steps in bullet points or in the form of a "
--                                   "continuous text.",
--                                   {("DATE", "CARDINAL"): None,
--                                    ("DATE", "CARDINAL"): None,
--                                    ("ORG", ""): None}]
-+            "Step 1": ["Please state your work experience steps in bullet points or in the form of a "
-+                       "continuous text.",
-+                       {("DATE", "CARDINAL"): None}]
-         },
-     "Social Engagement":
-         {
--            "Social_history": ["Please state your social engagements steps in bullet points or in the form of a "
-+            "Step 1": ["Please state your social engagements steps in bullet points or in the form of a "
-                                "continuous text.",
--                               {("DATE", "CARDINAL"): None,
--                                ("DATE", "CARDINAL"): None,
--                                ("ORG", ""): None}]
-+                               {("DATE", "CARDINAL"): None}]
-         },
-     "Skills":
-         {
-@@ -104,43 +97,7 @@
-                            ("ORG", ""): None}]
-         },
- }
--# data = {"Personal Data":
--#     {
--#         "Name": ["What is your full name?", lambda doc: get_data(1, ["PERSON"], doc, to_string), None],
--#         "Birthdate": ["What is your date of birth?", lambda doc: get_data(1, ["DATE", "CARDINAL"], doc, to_string),
--#                       None],
--#         "E-Mail": ["Please tell me your email.", lambda t: re.search(mail_re, t).group(), None],
--#         "Address": ["Please state your address.", lambda t: re.search(address_re, t).group(), None]
--#         # TODO Train spaCY on adresses
--#     },
--#     "Education":
--#         {
--#             "Education_history": ["Please state your educational steps in the form of a "
--#                                   "continuous text. For each educational step please enter a time frame, "
--#                                   "the educational step and the name of the teaching institution",
--#                                   lambda doc: get_data(-1, ["DATE", "ORG"], doc, to_string), None]
--#         },
--#     "Experience":
--#         {
--#             "Experience_history": ["Please state your work experience steps in bullet points or in the form of a "
--#                                    "continuous text.", lambda x: x, None]
--#         },
--#     "Social Engagement":
--#         {
--#             "Social_history": ["Please state your social engagements steps in bullet points or in the form of a "
--#                                "continuous text.", lambda x: x, None]
--#         },
--#     "Skills":
--#         {
--#             "Skills": ["Please state your work experience steps in bullet points or in the form of a "
--#                        "continuous text.", lambda x: x, None]
--#         },
--#     "Interests":
--#         {
--#             "Interests": ["If you would like to state any personal interests in your CV please enter them here: ",
--#                           lambda x: x, None]
--#         },
--# }
-+
- debug_data = {"Personal Data":
-     {
-         "Name": "Max Mustermann",
-@@ -172,6 +129,7 @@
-         },
- }
- question_num = 0
-+data_store = 1
- fun_num = 1
- data_num = 2
--debug = True
-+debug = False
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_13_10_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_13_10_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_13_10_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_13_10_[Changes]/shelved.patch	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ /dev/null	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
@@ -1,110 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" name=\"Changes\" comment=\"add readme.md\">\n      <change beforePath=\"$PROJECT_DIR$/utils.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/utils.py\" afterDir=\"false\" />\n    </list>\n    <list id=\"d940c511-92f0-4fb1-bee5-601ff7e2efda\" name=\"Changes by danielbier\" comment=\"\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Python Script\" />\n        <option value=\"Jupyter Notebook\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2GaQfpjOf9rEUTWkdg4KFLWfbUW\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"codeWithMe.voiceChat.enabledByDefault\": \"false\",\n    \"last_opened_file_path\": \"C:/Users/kraus/OneDrive/Uni/Semester 5 - Barcelona/Term 1/AI/P-02/multiagent\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\"\n  }\n}]]></component>\n  <component name=\"RunManager\">\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\n      <module name=\"CV-Bot\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" name=\"Changes\" comment=\"\" />\n      <created>1666624320371</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1666624320371</updated>\n      <workItem from=\"1666624324547\" duration=\"3914000\" />\n      <workItem from=\"1666707462917\" duration=\"24000\" />\n      <workItem from=\"1667220446521\" duration=\"2463000\" />\n      <workItem from=\"1668082266353\" duration=\"57000\" />\n      <workItem from=\"1668349949463\" duration=\"8970000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"add readme.md\">\n      <created>1667490598481</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1667490598481</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"add readme.md\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"add readme.md\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/utils.py</url>\n          <line>14</line>\n          <option name=\"timeStamp\" value=\"2\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/utils.py</url>\n          <line>23</line>\n          <option name=\"timeStamp\" value=\"3\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/CV_Bot$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1668358936503\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n  </component>\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision ed78308d9ea37f4fbace707f45ff94eb2069aa32)
-+++ b/.idea/workspace.xml	(date 1669464623668)
-@@ -4,8 +4,10 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="5649b55e-c08f-47c7-b4e3-720abb9a88ae" name="Changes" comment="add readme.md">
--      <change beforePath="$PROJECT_DIR$/utils.py" beforeDir="false" afterPath="$PROJECT_DIR$/utils.py" afterDir="false" />
-+    <list default="true" id="5649b55e-c08f-47c7-b4e3-720abb9a88ae" name="Changes" comment="update readme.md during NLP session 03.11">
-+      <change beforePath="$PROJECT_DIR$/.idea/CV-Bot.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/CV-Bot.iml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-     </list>
-     <list id="d940c511-92f0-4fb1-bee5-601ff7e2efda" name="Changes by danielbier" comment="" />
-     <option name="SHOW_DIALOG" value="false" />
-@@ -35,18 +37,18 @@
-     <option name="hideEmptyMiddlePackages" value="true" />
-     <option name="showLibraryContents" value="true" />
-   </component>
--  <component name="PropertiesComponent"><![CDATA[{
--  "keyToString": {
--    "ASKED_ADD_EXTERNAL_FILES": "true",
--    "WebServerToolWindowFactoryState": "false",
--    "codeWithMe.voiceChat.enabledByDefault": "false",
--    "last_opened_file_path": "C:/Users/kraus/OneDrive/Uni/Semester 5 - Barcelona/Term 1/AI/P-02/multiagent",
--    "node.js.detected.package.eslint": "true",
--    "node.js.detected.package.tslint": "true",
--    "node.js.selected.package.eslint": "(autodetect)",
--    "node.js.selected.package.tslint": "(autodetect)"
-+  <component name="PropertiesComponent">{
-+  &quot;keyToString&quot;: {
-+    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
-+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-+    &quot;codeWithMe.voiceChat.enabledByDefault&quot;: &quot;false&quot;,
-+    &quot;last_opened_file_path&quot;: &quot;C:/Users/kraus/OneDrive/Uni/Semester 5 - Barcelona/Term 1/AI/P-02/multiagent&quot;,
-+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;
-   }
--}]]></component>
-+}</component>
-   <component name="RunManager">
-     <configuration name="main" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
-       <module name="CV-Bot" />
-@@ -84,6 +86,8 @@
-       <workItem from="1667220446521" duration="2463000" />
-       <workItem from="1668082266353" duration="57000" />
-       <workItem from="1668349949463" duration="8970000" />
-+      <workItem from="1669283331721" duration="483000" />
-+      <workItem from="1669381300817" duration="38000" />
-     </task>
-     <task id="LOCAL-00001" summary="add readme.md">
-       <created>1667490598481</created>
-@@ -131,6 +135,6 @@
-     </breakpoint-manager>
-   </component>
-   <component name="com.intellij.coverage.CoverageDataManagerImpl">
--    <SUITE FILE_PATH="coverage/CV_Bot$main.coverage" NAME="main Coverage Results" MODIFIED="1668358936503" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-+    <SUITE FILE_PATH="coverage/CV_Bot$main.coverage" NAME="main Coverage Results" MODIFIED="1667496899277" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-   </component>
- </project>
-\ No newline at end of file
-Index: .idea/CV-Bot.iml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"PYTHON_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\">\n    <content url=\"file://$MODULE_DIR$\">\n      <excludeFolder url=\"file://$MODULE_DIR$/venv\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/CV-Bot.iml b/.idea/CV-Bot.iml
---- a/.idea/CV-Bot.iml	(revision ed78308d9ea37f4fbace707f45ff94eb2069aa32)
-+++ b/.idea/CV-Bot.iml	(date 1669381325840)
-@@ -3,8 +3,9 @@
-   <component name="NewModuleRootManager">
-     <content url="file://$MODULE_DIR$">
-       <excludeFolder url="file://$MODULE_DIR$/venv" />
-+      <excludeFolder url="file://$MODULE_DIR$/.env" />
-     </content>
--    <orderEntry type="inheritedJdk" />
-+    <orderEntry type="jdk" jdkName="Python 3.7" jdkType="Python SDK" />
-     <orderEntry type="sourceFolder" forTests="false" />
-   </component>
- </module>
-\ No newline at end of file
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.10 (CV-Bot) (3)\" project-jdk-type=\"Python SDK\" />\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
---- a/.idea/misc.xml	(revision ed78308d9ea37f4fbace707f45ff94eb2069aa32)
-+++ b/.idea/misc.xml	(date 1669381325852)
-@@ -1,4 +1,4 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
--  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10 (CV-Bot) (3)" project-jdk-type="Python SDK" />
-+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7" project-jdk-type="Python SDK" />
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_47__Changes_1.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_47__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_47__Changes_1.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_47__Changes_1.xml	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ /dev/null	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_26_11_22,_14_47_[Changes]1" date="1669470701399" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_14_47_[Changes]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 26.11.22, 14:47 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_14_56_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_14_56_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_14_56_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_14_56_[Changes]/shelved.patch	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ /dev/null	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
@@ -1,76 +0,0 @@
-Index: dialog.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>from utils import *\r\nimport keyboard\r\nimport numpy as np\r\nfrom numpy.linalg import norm\r\n\r\nspacy.cli.download(\"en_core_web_sm\")\r\nnlp = spacy.load('en_core_web_sm')\r\n\r\n\r\n\r\nclass Dialog:\r\n\r\n    def __init__(self):\r\n        self.data = data.copy()\r\n        self.history = []\r\n        self.check_data_vec = self.compute_avg_vec(check_data_questions)\r\n        print(\"Hello, I am CV-Bot. I am here to help you create your CV.\")\r\n        self.speak()\r\n\r\n    def compute_avg_vec(self, list):\r\n        vector = np.array([nlp(elem).vector for elem in list]).mean(axis=0)\r\n        return vector\r\n\r\n    def get_current_stage(self):\r\n        stage, _ = self.history[-1]\r\n        return stage\r\n\r\n    def get_previous_stage(self):\r\n        if len(self.history) > 1:\r\n            stage, _ = self.history[-1]\r\n            return stage\r\n        else:\r\n            return None  # Todo add error handling\r\n\r\n    def add_new_stage(self, position):\r\n        self.history.append((position, []))\r\n\r\n    def get_current_question(self):\r\n        _, questions = self.history[-1]\r\n        if questions:\r\n            return questions[-1]\r\n        else:\r\n            None  # Todo add error handling\r\n\r\n    def get_previous_question(self):\r\n        _, questions = self.history[-1]\r\n        if len(questions) > 1:\r\n            return questions[-2]\r\n        else:\r\n            None  # Todo add error handling\r\n\r\n    def add_question_to_history(self, question):\r\n        self.history[-1][1].append(question)\r\n\r\n    def handle_error(self, user_input, type):\r\n        if type == check_data_error:\r\n            print(\"Sorry unfortunately we couldn't find the data you were looking for.\")\r\n            new_input = input(\"Do you want to continue or try again?\")\r\n            if new_input.__contains__(\"again\"):\r\n                return self.classify(input(\"Please state your request again.\"))\r\n            else:\r\n                return None\r\n    # ask the question according to the current position\r\n    def ask(self, question):\r\n        # get the answer from the user or from the debug data\r\n        current_question = self.data[self.get_current_stage()][self.get_current_question()]\r\n        if debug:\r\n            print(current_question[question_num])\r\n            answer = debug_data[self.get_current_stage()][question]\r\n        else:\r\n            answer = input(current_question[question_num] + \"\\n\")\r\n        if debug:\r\n            print(answer)\r\n        return answer\r\n\r\n    def listen(self, input):\r\n        ...\r\n        # wait as long as keyboard is pressed\r\n\r\n    # agent starts to speak with user\r\n    def speak(self):\r\n        for position in self.data.keys():\r\n            # add the new stage to the history\r\n            self.add_new_stage(position)\r\n            # get the value of the dict of the current stage (eg, Name, Birthdate ...)\r\n            current_stage = self.data[self.get_current_stage()]\r\n            # go through all questions for the current stage, e.g. What is your name?\r\n            for question in current_stage:\r\n                self.add_question_to_history(question)\r\n                current_question = current_stage[question]\r\n                if question == \"E-Mail\" or question == \"Address\":\r\n                    processed_input = current_question[fun_num](self.ask(question))\r\n                else:\r\n                    processed_input = self.understanding(self.ask(question))\r\n                    self.map_input_to_data(processed_input)\r\n\r\n    def understanding(self, user_input):\r\n        input_type = self.classify(user_input)\r\n        if input_type == \"answer\":\r\n            return self.get_data(user_input)\r\n        else:\r\n            print_data(input_type)\r\n            return self.understanding(self.ask(self.get_current_question()))\r\n\r\n    # Possible returns are \"answer\" or the stage that is supposed to get printed\r\n    def classify(self, user_input):\r\n        user_input_vec = np.array(nlp(user_input).vector)\r\n        cosine = np.dot(user_input_vec, self.check_data_vec) / (norm(user_input_vec) * norm(self.check_data_vec))\r\n        if cosine > 0.3:\r\n            if any(e in user_input for e in check_prev):\r\n                return self.get_previous_stage()\r\n            else:\r\n                for key in self.data.keys():\r\n                    if user_input.__contains__(key):\r\n                        return key\r\n                return self.handle_error(self, user_input, check_data_error)\r\n        return \"answer\"\r\n\r\n    def get_data(self, input):\r\n        user_data = []\r\n        # check if we are only looking for regex and not the SpaCy model\r\n        current_question = self.data[self.get_current_stage()][self.get_current_question()]\r\n        necessary_entities = [element for innerList in current_question[fun_num].keys() for element in\r\n                              innerList]\r\n        doc = nlp(input)\r\n        for entity in doc.ents:\r\n            for type in necessary_entities:\r\n                if entity.label_ == type:\r\n                    user_data.append(entity.text)\r\n        print(user_data)\r\n        return user_data\r\n\r\n    # if \"DATE\" in types:\r\n    #     answer = answer.replace(\".\", \"/\")\r\n    #     answer = answer.replace(\",\", \"/\")\r\n    #\r\n    # doc = nlp(answer)\r\n    # data = []\r\n    # # filter all entities that are our searched type\r\n    # for entity in doc.ents:\r\n    #     for t in types:\r\n    #         if entity.label_ == t:\r\n    #             data.append(entity.text)\r\n    # # check if we found the correct data\r\n    # if 0 < numData != len(data):\r\n    #     data_text = \" \".join([d.text for d in data])\r\n    #     types_text = \", \".join([t for t in types])\r\n    #     doc_data_text = \" \".join([\"(\" + d.text + \", \" + d.label_ + \") \" for d in doc.ents])\r\n    #     raise Exception(\"get_data: Looked for \" + types_text + \" Found \" + str(\r\n    #         len(data)) + \"data, while expecting \" + str(\r\n    #         numData) + \" \\n The found data are \" + data_text + \"\\n the data in the doc is \" + doc_data_text)\r\n    # else:\r\n    #     return format_fun(data)\r\n\r\n    def map_input_to_data(self, user_data):\r\n        print(\"Needs to mapped\")\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/dialog.py b/dialog.py
---- a/dialog.py	(revision dfc3c2d9778db7c4907d2b425d389c50754398f2)
-+++ b/dialog.py	(date 1669470986533)
-@@ -21,7 +21,7 @@
-         vector = np.array([nlp(elem).vector for elem in list]).mean(axis=0)
-         return vector
- 
--    def get_current_stage(self):
-+    def get_current_stage_name(self):
-         stage, _ = self.history[-1]
-         return stage
- 
-@@ -35,14 +35,14 @@
-     def add_new_stage(self, position):
-         self.history.append((position, []))
- 
--    def get_current_question(self):
-+    def get_current_question_name(self):
-         _, questions = self.history[-1]
-         if questions:
-             return questions[-1]
-         else:
-             None  # Todo add error handling
- 
--    def get_previous_question(self):
-+    def get_previous_question_name(self):
-         _, questions = self.history[-1]
-         if len(questions) > 1:
-             return questions[-2]
-@@ -63,10 +63,10 @@
-     # ask the question according to the current position
-     def ask(self, question):
-         # get the answer from the user or from the debug data
--        current_question = self.data[self.get_current_stage()][self.get_current_question()]
-+        current_question = self.data[self.get_current_stage_name()][self.get_current_question_name()]
-         if debug:
-             print(current_question[question_num])
--            answer = debug_data[self.get_current_stage()][question]
-+            answer = debug_data[self.get_current_stage_name()][question]
-         else:
-             answer = input(current_question[question_num] + "\n")
-         if debug:
-@@ -83,7 +83,7 @@
-             # add the new stage to the history
-             self.add_new_stage(position)
-             # get the value of the dict of the current stage (eg, Name, Birthdate ...)
--            current_stage = self.data[self.get_current_stage()]
-+            current_stage = self.data[self.get_current_stage_name()]
-             # go through all questions for the current stage, e.g. What is your name?
-             for question in current_stage:
-                 self.add_question_to_history(question)
-@@ -100,7 +100,7 @@
-             return self.get_data(user_input)
-         else:
-             print_data(input_type)
--            return self.understanding(self.ask(self.get_current_question()))
-+            return self.understanding(self.ask(self.get_current_question_name()))
- 
-     # Possible returns are "answer" or the stage that is supposed to get printed
-     def classify(self, user_input):
-@@ -119,7 +119,7 @@
-     def get_data(self, input):
-         user_data = []
-         # check if we are only looking for regex and not the SpaCy model
--        current_question = self.data[self.get_current_stage()][self.get_current_question()]
-+        current_question = self.data[self.get_current_stage_name()][self.get_current_question_name()]
-         necessary_entities = [element for innerList in current_question[fun_num].keys() for element in
-                               innerList]
-         doc = nlp(input)
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_16_27__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_16_27__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_16_27__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_16_27__Changes_.xml	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ /dev/null	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_26_11_2022_16_27_[Changes]" date="1669476463418" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_16_27_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 26/11/2022 16:27 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__15_24__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__15_24__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__15_24__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__15_24__Changes_.xml	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ /dev/null	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_26_11_22,_15_24_[Changes]" date="1669472669750" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_15_24_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 26.11.22, 15:24 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_10__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_10__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_10__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_10__Changes_.xml	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ /dev/null	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_26_11_22,_13_10_[Changes]" date="1669464634443" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_13_10_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 26.11.22, 13:10 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_15_24_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_15_24_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_15_24_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_15_24_[Changes]/shelved.patch	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ /dev/null	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
@@ -1,166 +0,0 @@
-Index: utils.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import re\nimport spacy\n\n\n# currently loading spacy during every execution\n\n\n# checks if the given input of the user actually contains the necessary information\n\n\ndef format_data(data, all_data, types):\n    formated_data = []\n    if len(data) % len(types) != 0:\n        all_data_text = \" \".join([d.text for d in all_data])\n        data_text = \" \".join([d.text for d in data])\n        types_text = \", \".join([t for t in types])\n        raise Exception(\"format_data: Looked for \" + types_text + \" Found \" + str(\n            len(data)) + \" data, which isn't possible to put into \" + len(\n            types) + \" fields.\" + \"\\n data: \" + data_text + \"\\n all data: \" + all_data_text)\n\n    for i in range(len(data) % len(types)):\n        current_data_set = data[(i * len(types)):((i + 1) * len(types))]\n\n        formated_data.append(data[(i * len(types)):((i + 1) * len(types))])\n\n\n# filter for valid inputs by user\nname_re = \"([A-Z]|[a-z])[a-z]+ ([A-Z]|[a-z])[a-z]+( ([A-Z]|[a-z])[a-z]+)*\"\ndate_re = \"([0-3]?[0-9].[0-1]?[0-9].[1-2][0-9][0-9][0-9])|([0-3]?[0-9]/[0-1]?[0-9]/[1-2][0-9][0-9][0-9])\"\nmail_re = \".+@.+\\..+\"\naddress_re = \"[A-Z][a-z]*.? [0-9]*\"\neduc_re = None\nexper_re = None\nsocial_re = None\nskills_re = None\ninterests_re = None\n\n\ndef to_string(t):\n    return \" \".join(t)\n\n\ndef print_cv(user_data):\n    indent = \"   \"\n    cv = \"C I R R I C U L U M   V I T A E\\n\"\n    for stage in data.keys():\n        contains_data = False\n        stage_text = stage + \":\\n\"\n        for sub_headline in user_data[stage].keys():\n            if user_data[stage][sub_headline][data_num] != None:\n                contains_data = True\n                stage_text += indent + sub_headline + \":\\n\"\n                stage_text += indent + indent + user_data[stage][sub_headline][data_num] + \"\\n\"\n        if contains_data:\n            cv += stage_text + \"\\n\"\n    print(cv)\n\n\ndata = {\"Personal Data\":\n    {\n        \"Name\": [\"What is your full name?\", {(\"PERSON\", \"\"): None}],\n        \"Birthdate\": [\"What is your date of birth?\", {(\"DATE\", \"CARDINAL\"): None}],\n        \"E-Mail\": [\"Please tell me your email.\", lambda t: re.search(mail_re, t).group(), None],\n        \"Address\": [\"Please state your address.\", lambda t: re.search(address_re, t).group(), None]\n    },\n    \"Education\":\n        {\n            \"Education_history\": [\"Please state your educational steps in the form of a \"\n                                  \"continuous text. For each educational step please enter a time frame, \"\n                                  \"the educational step and the name of the teaching institution\",\n                                  {(\"DATE\", \"CARDINAL\"): None,\n                                   (\"DATE\", \"CARDINAL\"): None,\n                                   (\"ORG\", \"\"): None}]\n        },\n    \"Experience\":\n        {\n            \"Experience_history\": [\"Please state your work experience steps in bullet points or in the form of a \"\n                                   \"continuous text.\",\n                                   {(\"DATE\", \"CARDINAL\"): None,\n                                    (\"DATE\", \"CARDINAL\"): None,\n                                    (\"ORG\", \"\"): None}]\n        },\n    \"Social Engagement\":\n        {\n            \"Social_history\": [\"Please state your social engagements steps in bullet points or in the form of a \"\n                               \"continuous text.\",\n                               {(\"DATE\", \"CARDINAL\"): None,\n                                (\"DATE\", \"CARDINAL\"): None,\n                                (\"ORG\", \"\"): None}]\n        },\n    \"Skills\":\n        {\n            \"Skills\": [\"Please state your work experience steps in bullet points or in the form of a \"\n                       \"continuous text.\",\n                       {(\"DATE\", \"CARDINAL\"): None,\n                        (\"DATE\", \"CARDINAL\"): None,\n                        (\"ORG\", \"\"): None}]\n        },\n    \"Interests\":\n        {\n            \"Interests\": [\"If you would like to state any personal interests in your CV please enter them here: \",\n                          {(\"DATE\", \"CARDINAL\"): None,\n                           (\"DATE\", \"CARDINAL\"): None,\n                           (\"ORG\", \"\"): None}]\n        },\n}\n# data = {\"Personal Data\":\n#     {\n#         \"Name\": [\"What is your full name?\", lambda doc: get_data(1, [\"PERSON\"], doc, to_string), None],\n#         \"Birthdate\": [\"What is your date of birth?\", lambda doc: get_data(1, [\"DATE\", \"CARDINAL\"], doc, to_string),\n#                       None],\n#         \"E-Mail\": [\"Please tell me your email.\", lambda t: re.search(mail_re, t).group(), None],\n#         \"Address\": [\"Please state your address.\", lambda t: re.search(address_re, t).group(), None]\n#         # TODO Train spaCY on adresses\n#     },\n#     \"Education\":\n#         {\n#             \"Education_history\": [\"Please state your educational steps in the form of a \"\n#                                   \"continuous text. For each educational step please enter a time frame, \"\n#                                   \"the educational step and the name of the teaching institution\",\n#                                   lambda doc: get_data(-1, [\"DATE\", \"ORG\"], doc, to_string), None]\n#         },\n#     \"Experience\":\n#         {\n#             \"Experience_history\": [\"Please state your work experience steps in bullet points or in the form of a \"\n#                                    \"continuous text.\", lambda x: x, None]\n#         },\n#     \"Social Engagement\":\n#         {\n#             \"Social_history\": [\"Please state your social engagements steps in bullet points or in the form of a \"\n#                                \"continuous text.\", lambda x: x, None]\n#         },\n#     \"Skills\":\n#         {\n#             \"Skills\": [\"Please state your work experience steps in bullet points or in the form of a \"\n#                        \"continuous text.\", lambda x: x, None]\n#         },\n#     \"Interests\":\n#         {\n#             \"Interests\": [\"If you would like to state any personal interests in your CV please enter them here: \",\n#                           lambda x: x, None]\n#         },\n# }\ndebug_data = {\"Personal Data\":\n    {\n        \"Name\": \"Max Mustermann\",\n        \"Birthdate\": \"20.12.2017\",\n        \"E-Mail\": \"abc@gmail.com\",\n        \"Address\": \"Bauerstr. 4\"\n    },\n    \"Education\":\n        {\n            \"Education_history\": \"From 2010 to 2019 I went to the Louise Schroeder School in Germany. After that, \"\n                                 \"starting in 2020 I started my studies at the Technical University of Munich until 2023. \"\n                                 \"From 2022 to 2022 it did an exchange abroad at the University Pompue Fabra\"\n        },\n    \"Experience\":\n        {\n            \"Experience_history\": \"asdfasdfasdfasdfasdf\"\n        },\n    \"Social Engagement\":\n        {\n            \"Social_history\": \"asdfasdfasdfasdf\"\n        },\n    \"Skills\":\n        {\n            \"Skills\": \"asdfjashdfkajsdhf\"\n        },\n    \"Interests\":\n        {\n            \"Interests\": \"asdhfakjsdhfasdf\"\n        },\n}\n\ncheck_data_questions = [\"Can you show me what I entered for X?\",\n                        \"What did you put as?\", \"Show me my X.\",\n                        \"What are my X?\"\n                        ]\ncheck_prev = [\"Last\", \"last\", \"previous\", \"Previous\"]\n\ndef print_data(stage):\n    print(\"Requested to print the stage \" + stage)\n\ncheck_data_error = \"check_data_not_found\"\n\nquestion_num = 0\nfun_num = 1\ndata_num = 2\ndebug = False\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/utils.py b/utils.py
---- a/utils.py	(revision 6a48dace508be1a6318f862463b4ba9dad0a4de3)
-+++ b/utils.py	(date 1669472060533)
-@@ -60,33 +60,26 @@
-     {
-         "Name": ["What is your full name?", {("PERSON", ""): None}],
-         "Birthdate": ["What is your date of birth?", {("DATE", "CARDINAL"): None}],
--        "E-Mail": ["Please tell me your email.", lambda t: re.search(mail_re, t).group(), None],
--        "Address": ["Please state your address.", lambda t: re.search(address_re, t).group(), None]
-+        "E-Mail": ["Please tell me your email.", {("E-Mail", ""): None}],
-+        "Address": ["Please state your address.", {("Address", "CARDINAL"): None}]
-     },
-     "Education":
-         {
--            "Education_history": ["Please state your educational steps in the form of a "
--                                  "continuous text. For each educational step please enter a time frame, "
--                                  "the educational step and the name of the teaching institution",
--                                  {("DATE", "CARDINAL"): None,
--                                   ("DATE", "CARDINAL"): None,
--                                   ("ORG", ""): None}]
-+            "Step 1": ["PLease state an education step containing the teaching institution, a start date "
-+                       "and a end date.",
-+                       {("DATE", "CARDINAL"): None}]
-         },
-     "Experience":
-         {
--            "Experience_history": ["Please state your work experience steps in bullet points or in the form of a "
--                                   "continuous text.",
--                                   {("DATE", "CARDINAL"): None,
--                                    ("DATE", "CARDINAL"): None,
--                                    ("ORG", ""): None}]
-+            "Step 1": ["Please state your work experience steps in bullet points or in the form of a "
-+                       "continuous text.",
-+                       {("DATE", "CARDINAL"): None}]
-         },
-     "Social Engagement":
-         {
--            "Social_history": ["Please state your social engagements steps in bullet points or in the form of a "
-+            "Step 1": ["Please state your social engagements steps in bullet points or in the form of a "
-                                "continuous text.",
--                               {("DATE", "CARDINAL"): None,
--                                ("DATE", "CARDINAL"): None,
--                                ("ORG", ""): None}]
-+                               {("DATE", "CARDINAL"): None}]
-         },
-     "Skills":
-         {
-@@ -104,43 +97,7 @@
-                            ("ORG", ""): None}]
-         },
- }
--# data = {"Personal Data":
--#     {
--#         "Name": ["What is your full name?", lambda doc: get_data(1, ["PERSON"], doc, to_string), None],
--#         "Birthdate": ["What is your date of birth?", lambda doc: get_data(1, ["DATE", "CARDINAL"], doc, to_string),
--#                       None],
--#         "E-Mail": ["Please tell me your email.", lambda t: re.search(mail_re, t).group(), None],
--#         "Address": ["Please state your address.", lambda t: re.search(address_re, t).group(), None]
--#         # TODO Train spaCY on adresses
--#     },
--#     "Education":
--#         {
--#             "Education_history": ["Please state your educational steps in the form of a "
--#                                   "continuous text. For each educational step please enter a time frame, "
--#                                   "the educational step and the name of the teaching institution",
--#                                   lambda doc: get_data(-1, ["DATE", "ORG"], doc, to_string), None]
--#         },
--#     "Experience":
--#         {
--#             "Experience_history": ["Please state your work experience steps in bullet points or in the form of a "
--#                                    "continuous text.", lambda x: x, None]
--#         },
--#     "Social Engagement":
--#         {
--#             "Social_history": ["Please state your social engagements steps in bullet points or in the form of a "
--#                                "continuous text.", lambda x: x, None]
--#         },
--#     "Skills":
--#         {
--#             "Skills": ["Please state your work experience steps in bullet points or in the form of a "
--#                        "continuous text.", lambda x: x, None]
--#         },
--#     "Interests":
--#         {
--#             "Interests": ["If you would like to state any personal interests in your CV please enter them here: ",
--#                           lambda x: x, None]
--#         },
--# }
-+
- debug_data = {"Personal Data":
-     {
-         "Name": "Max Mustermann",
-@@ -171,18 +128,6 @@
-             "Interests": "asdhfakjsdhfasdf"
-         },
- }
--
--check_data_questions = ["Can you show me what I entered for X?",
--                        "What did you put as?", "Show me my X.",
--                        "What are my X?"
--                        ]
--check_prev = ["Last", "last", "previous", "Previous"]
--
--def print_data(stage):
--    print("Requested to print the stage " + stage)
--
--check_data_error = "check_data_not_found"
--
- question_num = 0
- fun_num = 1
- data_num = 2
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" name=\"Changes\" comment=\"add readme.md\" />\n    <list id=\"d940c511-92f0-4fb1-bee5-601ff7e2efda\" name=\"Changes by danielbier\" comment=\"\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Jupyter Notebook\" />\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2GaQfpjOf9rEUTWkdg4KFLWfbUW\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;codeWithMe.voiceChat.enabledByDefault&quot;: &quot;false&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/kraus/OneDrive/Uni/Semester 5 - Barcelona/Term 1/AI/P-03/reinforcement&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;\n  }\n}</component>\n  <component name=\"RunManager\">\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"CV-Bot\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"true\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\n      <module name=\"CV-Bot\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" name=\"Changes\" comment=\"\" />\n      <created>1666624320371</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1666624320371</updated>\n      <workItem from=\"1666624324547\" duration=\"3914000\" />\n      <workItem from=\"1666707462917\" duration=\"24000\" />\n      <workItem from=\"1667220446521\" duration=\"2463000\" />\n      <workItem from=\"1668082266353\" duration=\"57000\" />\n      <workItem from=\"1668349949463\" duration=\"9077000\" />\n      <workItem from=\"1668771685506\" duration=\"47000\" />\n      <workItem from=\"1669282439560\" duration=\"10646000\" />\n      <workItem from=\"1669300612743\" duration=\"27000\" />\n      <workItem from=\"1669389294498\" duration=\"687000\" />\n      <workItem from=\"1669464900000\" duration=\"5833000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"add readme.md\">\n      <created>1667490598481</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1667490598481</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"add readme.md\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"add readme.md\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/main.py</url>\n          <line>6</line>\n          <option name=\"timeStamp\" value=\"5\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/dialog.py</url>\n          <line>54</line>\n          <option name=\"timeStamp\" value=\"15\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/CV_Bot$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1669470214203\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n  </component>\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 6a48dace508be1a6318f862463b4ba9dad0a4de3)
-+++ b/.idea/workspace.xml	(date 1669472061376)
-@@ -4,7 +4,10 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="5649b55e-c08f-47c7-b4e3-720abb9a88ae" name="Changes" comment="add readme.md" />
-+    <list default="true" id="5649b55e-c08f-47c7-b4e3-720abb9a88ae" name="Changes" comment="bullet points">
-+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/utils.py" beforeDir="false" afterPath="$PROJECT_DIR$/utils.py" afterDir="false" />
-+    </list>
-     <list id="d940c511-92f0-4fb1-bee5-601ff7e2efda" name="Changes by danielbier" comment="" />
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -117,7 +120,14 @@
-       <option name="project" value="LOCAL" />
-       <updated>1667490598481</updated>
-     </task>
--    <option name="localTasksCounter" value="2" />
-+    <task id="LOCAL-00002" summary="bullet points">
-+      <created>1669470951060</created>
-+      <option name="number" value="00002" />
-+      <option name="presentableId" value="LOCAL-00002" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1669470951060</updated>
-+    </task>
-+    <option name="localTasksCounter" value="3" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -137,7 +147,8 @@
-   <component name="VcsManagerConfiguration">
-     <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
-     <MESSAGE value="add readme.md" />
--    <option name="LAST_COMMIT_MESSAGE" value="add readme.md" />
-+    <MESSAGE value="bullet points" />
-+    <option name="LAST_COMMIT_MESSAGE" value="bullet points" />
-   </component>
-   <component name="XDebuggerManager">
-     <breakpoint-manager>
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_13_17_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_13_17_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_13_17_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_13_17_[Changes]/shelved.patch	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ /dev/null	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
@@ -1,137 +0,0 @@
-Index: dialog.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>from utils import *\nimport keyboard\n\nspacy.cli.download(\"en_core_web_sm\")\nnlp = spacy.load('en_core_web_sm')\n\n\nclass Dialog:\n\n    def __init__(self):\n        self.state = \"asd\"\n        self.position = \"Personal Data\"\n        self.data = data.copy()\n        self.current_stage = self.data[self.position]\n        self.current_question = None\n        print(\"Hello, I am CV-Bot. I am here to help you create your CV.\")\n        self.speak()\n\n    # ask the question according to the current position\n    def ask(self, question):\n        # get the answer from the user or from the debug data\n        #self.current_question = self.current_stage[question]\n        if debug:\n            print(self.current_question[question_num])\n            answer = debug_data[self.position][question]\n        else:\n            answer = input(self.current_question[question_num] + \"\\n\")\n        if debug:\n            print(answer)\n        return answer\n\n    def listen(self, input):\n        ...\n        # wait as long as keyboard is pressed\n\n    # agent starts to speak with user\n    def speak(self):\n        for position in self.data.keys():\n            self.position = position\n            self.current_stage = self.data[position]\n            # go throuh all questions for the current stage, e.g. What is your name?\n            for question in self.current_stage:\n                self.current_question = self.current_stage[question]\n                if question == \"E-Mail\" or question == \"Address\":\n                    processed_input = self.current_question[fun_num](self.ask(question))\n                else:\n                    processed_input = self.understanding(self.ask(question))\n                    self.map_input_to_data(processed_input)\n\n    def understanding(self, user_input):\n        input_type = self.classify(user_input)\n        return self.get_data(input_type, user_input)\n\n    def classify(self, user_input):\n        # Todo Use a model to decide\n        return \"answer\"\n\n    def get_data(self, input_type, input):\n        user_data = []\n        if input_type == 'answer':\n            # check if we are only looking for regex and not the SpaCy model\n            necessary_entities = [element for innerList in self.current_question[fun_num].keys() for element in innerList]\n            doc = nlp(input)\n            for entity in doc.ents:\n                for type in necessary_entities:\n                    if entity.label_ == type:\n                        user_data.append(entity.text)\n        print(user_data)\n        return user_data\n    # if \"DATE\" in types:\n    #     answer = answer.replace(\".\", \"/\")\n    #     answer = answer.replace(\",\", \"/\")\n    #\n    # doc = nlp(answer)\n    # data = []\n    # # filter all entities that are our searched type\n    # for entity in doc.ents:\n    #     for t in types:\n    #         if entity.label_ == t:\n    #             data.append(entity.text)\n    # # check if we found the correct data\n    # if 0 < numData != len(data):\n    #     data_text = \" \".join([d.text for d in data])\n    #     types_text = \", \".join([t for t in types])\n    #     doc_data_text = \" \".join([\"(\" + d.text + \", \" + d.label_ + \") \" for d in doc.ents])\n    #     raise Exception(\"get_data: Looked for \" + types_text + \" Found \" + str(\n    #         len(data)) + \"data, while expecting \" + str(\n    #         numData) + \" \\n The found data are \" + data_text + \"\\n the data in the doc is \" + doc_data_text)\n    # else:\n    #     return format_fun(data)\n\n    def map_input_to_data(self, user_data):\n        print(\"Needs to mapped\")\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/dialog.py b/dialog.py
---- a/dialog.py	(revision 74466761b2eb6e0ba1bacdf175badf64520b1bca)
-+++ b/dialog.py	(date 1669465003206)
-@@ -1,3 +1,5 @@
-+import spacy as spacy
-+
- from utils import *
- import keyboard
- 
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" name=\"Changes\" comment=\"add readme.md\">\n      <change afterPath=\"$PROJECT_DIR$/dialog.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/utils.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/utils.py\" afterDir=\"false\" />\n    </list>\n    <list id=\"d940c511-92f0-4fb1-bee5-601ff7e2efda\" name=\"Changes by danielbier\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/utils.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/utils.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Jupyter Notebook\" />\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"LineStatusTrackerManager\">\n    <file path=\"$PROJECT_DIR$/utils.py\">\n      <ranges>\n        <range start1=\"2\" end1=\"2\" start2=\"2\" end2=\"4\" changelist=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" />\n        <range start1=\"3\" end1=\"5\" start2=\"5\" end2=\"6\" changelist=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" />\n        <range start1=\"7\" end1=\"29\" start2=\"8\" end2=\"8\" changelist=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" />\n        <range start1=\"58\" end1=\"58\" start2=\"37\" end2=\"38\" changelist=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" />\n        <range start1=\"61\" end1=\"61\" start2=\"41\" end2=\"58\" changelist=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" />\n        <range start1=\"63\" end1=\"65\" start2=\"60\" end2=\"62\" changelist=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" />\n        <range start1=\"66\" end1=\"67\" start2=\"63\" end2=\"64\" changelist=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" />\n        <range start1=\"72\" end1=\"73\" start2=\"69\" end2=\"73\" changelist=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" />\n        <range start1=\"77\" end1=\"78\" start2=\"77\" end2=\"81\" changelist=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" />\n        <range start1=\"82\" end1=\"83\" start2=\"85\" end2=\"89\" changelist=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" />\n        <range start1=\"87\" end1=\"88\" start2=\"93\" end2=\"97\" changelist=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" />\n        <range start1=\"92\" end1=\"93\" start2=\"101\" end2=\"104\" changelist=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" />\n        <range start1=\"95\" end1=\"95\" start2=\"106\" end2=\"143\" changelist=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" />\n        <range start1=\"104\" end1=\"105\" start2=\"152\" end2=\"155\" changelist=\"d940c511-92f0-4fb1-bee5-601ff7e2efda\" />\n      </ranges>\n    </file>\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2GaQfpjOf9rEUTWkdg4KFLWfbUW\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;codeWithMe.voiceChat.enabledByDefault&quot;: &quot;false&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/kraus/OneDrive/Uni/Semester 5 - Barcelona/Term 1/AI/P-03/reinforcement&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;\n  }\n}</component>\n  <component name=\"RunManager\">\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\n      <module name=\"CV-Bot\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" name=\"Changes\" comment=\"\" />\n      <created>1666624320371</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1666624320371</updated>\n      <workItem from=\"1666624324547\" duration=\"3914000\" />\n      <workItem from=\"1666707462917\" duration=\"24000\" />\n      <workItem from=\"1667220446521\" duration=\"2463000\" />\n      <workItem from=\"1668082266353\" duration=\"57000\" />\n      <workItem from=\"1668349949463\" duration=\"9077000\" />\n      <workItem from=\"1668771685506\" duration=\"47000\" />\n      <workItem from=\"1669282439560\" duration=\"10615000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"add readme.md\">\n      <created>1667490598481</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1667490598481</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"add readme.md\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"add readme.md\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/main.py</url>\n          <line>6</line>\n          <option name=\"timeStamp\" value=\"5\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/dialog.py</url>\n          <line>59</line>\n          <option name=\"timeStamp\" value=\"13\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/CV_Bot$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1669296008737\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n  </component>\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 74466761b2eb6e0ba1bacdf175badf64520b1bca)
-+++ b/.idea/workspace.xml	(date 1669465023898)
-@@ -5,14 +5,11 @@
-   </component>
-   <component name="ChangeListManager">
-     <list default="true" id="5649b55e-c08f-47c7-b4e3-720abb9a88ae" name="Changes" comment="add readme.md">
--      <change afterPath="$PROJECT_DIR$/dialog.py" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/utils.py" beforeDir="false" afterPath="$PROJECT_DIR$/utils.py" afterDir="false" />
--    </list>
--    <list id="d940c511-92f0-4fb1-bee5-601ff7e2efda" name="Changes by danielbier" comment="">
--      <change beforePath="$PROJECT_DIR$/utils.py" beforeDir="false" afterPath="$PROJECT_DIR$/utils.py" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/CV-Bot.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/CV-Bot.iml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/dialog.py" beforeDir="false" afterPath="$PROJECT_DIR$/dialog.py" afterDir="false" />
-     </list>
-+    <list id="d940c511-92f0-4fb1-bee5-601ff7e2efda" name="Changes by danielbier" comment="" />
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-@@ -29,26 +26,6 @@
-   <component name="Git.Settings">
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
-   </component>
--  <component name="LineStatusTrackerManager">
--    <file path="$PROJECT_DIR$/utils.py">
--      <ranges>
--        <range start1="2" end1="2" start2="2" end2="4" changelist="5649b55e-c08f-47c7-b4e3-720abb9a88ae" />
--        <range start1="3" end1="5" start2="5" end2="6" changelist="5649b55e-c08f-47c7-b4e3-720abb9a88ae" />
--        <range start1="7" end1="29" start2="8" end2="8" changelist="5649b55e-c08f-47c7-b4e3-720abb9a88ae" />
--        <range start1="58" end1="58" start2="37" end2="38" changelist="5649b55e-c08f-47c7-b4e3-720abb9a88ae" />
--        <range start1="61" end1="61" start2="41" end2="58" changelist="5649b55e-c08f-47c7-b4e3-720abb9a88ae" />
--        <range start1="63" end1="65" start2="60" end2="62" changelist="5649b55e-c08f-47c7-b4e3-720abb9a88ae" />
--        <range start1="66" end1="67" start2="63" end2="64" changelist="5649b55e-c08f-47c7-b4e3-720abb9a88ae" />
--        <range start1="72" end1="73" start2="69" end2="73" changelist="5649b55e-c08f-47c7-b4e3-720abb9a88ae" />
--        <range start1="77" end1="78" start2="77" end2="81" changelist="5649b55e-c08f-47c7-b4e3-720abb9a88ae" />
--        <range start1="82" end1="83" start2="85" end2="89" changelist="5649b55e-c08f-47c7-b4e3-720abb9a88ae" />
--        <range start1="87" end1="88" start2="93" end2="97" changelist="5649b55e-c08f-47c7-b4e3-720abb9a88ae" />
--        <range start1="92" end1="93" start2="101" end2="104" changelist="5649b55e-c08f-47c7-b4e3-720abb9a88ae" />
--        <range start1="95" end1="95" start2="106" end2="143" changelist="5649b55e-c08f-47c7-b4e3-720abb9a88ae" />
--        <range start1="104" end1="105" start2="152" end2="155" changelist="d940c511-92f0-4fb1-bee5-601ff7e2efda" />
--      </ranges>
--    </file>
--  </component>
-   <component name="MarkdownSettingsMigration">
-     <option name="stateVersion" value="1" />
-   </component>
-@@ -141,23 +118,7 @@
-     <MESSAGE value="add readme.md" />
-     <option name="LAST_COMMIT_MESSAGE" value="add readme.md" />
-   </component>
--  <component name="XDebuggerManager">
--    <breakpoint-manager>
--      <breakpoints>
--        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
--          <url>file://$PROJECT_DIR$/main.py</url>
--          <line>6</line>
--          <option name="timeStamp" value="5" />
--        </line-breakpoint>
--        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
--          <url>file://$PROJECT_DIR$/dialog.py</url>
--          <line>59</line>
--          <option name="timeStamp" value="13" />
--        </line-breakpoint>
--      </breakpoints>
--    </breakpoint-manager>
--  </component>
-   <component name="com.intellij.coverage.CoverageDataManagerImpl">
--    <SUITE FILE_PATH="coverage/CV_Bot$main.coverage" NAME="main Coverage Results" MODIFIED="1669296008737" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-+    <SUITE FILE_PATH="coverage/CV_Bot$main.coverage" NAME="main Coverage Results" MODIFIED="1669465003222" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-   </component>
- </project>
-\ No newline at end of file
-Index: .idea/CV-Bot.iml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"PYTHON_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\">\n    <content url=\"file://$MODULE_DIR$\">\n      <excludeFolder url=\"file://$MODULE_DIR$/venv\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/CV-Bot.iml b/.idea/CV-Bot.iml
---- a/.idea/CV-Bot.iml	(revision 74466761b2eb6e0ba1bacdf175badf64520b1bca)
-+++ b/.idea/CV-Bot.iml	(date 1669464634402)
-@@ -3,8 +3,9 @@
-   <component name="NewModuleRootManager">
-     <content url="file://$MODULE_DIR$">
-       <excludeFolder url="file://$MODULE_DIR$/venv" />
-+      <excludeFolder url="file://$MODULE_DIR$/.env" />
-     </content>
--    <orderEntry type="inheritedJdk" />
-+    <orderEntry type="jdk" jdkName="Python 3.7" jdkType="Python SDK" />
-     <orderEntry type="sourceFolder" forTests="false" />
-   </component>
- </module>
-\ No newline at end of file
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.10 (CV-Bot) (3)\" project-jdk-type=\"Python SDK\" />\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
---- a/.idea/misc.xml	(revision 74466761b2eb6e0ba1bacdf175badf64520b1bca)
-+++ b/.idea/misc.xml	(date 1669464634411)
-@@ -1,4 +1,4 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
--  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10 (CV-Bot) (3)" project-jdk-type="Python SDK" />
-+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.7" project-jdk-type="Python SDK" />
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_14_56__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_14_56__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_14_56__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_14_56__Changes_.xml	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ /dev/null	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_26_11_2022_14_56_[Changes]" date="1669471401685" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_14_56_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 26/11/2022 14:56 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_17__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_17__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_17__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_17__Changes_.xml	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ /dev/null	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_26_11_22,_13_17_[Changes]" date="1669465045326" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_13_17_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 26.11.22, 13:17 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_16_27_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_16_27_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_16_27_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_16_27_[Changes]/shelved.patch	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ /dev/null	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
@@ -1,221 +0,0 @@
-Index: dialog.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>from utils import *\r\nimport keyboard\r\nimport numpy as np\r\nfrom numpy.linalg import norm\r\n\r\nspacy.cli.download(\"en_core_web_sm\")\r\nnlp = spacy.load('en_core_web_sm')\r\n\r\n\r\n\r\nclass Dialog:\r\n\r\n    def __init__(self):\r\n        self.data = data.copy()\r\n        self.history = []\r\n        self.check_data_vec = self.compute_avg_vec(check_data_questions)\r\n        print(\"Hello, I am CV-Bot. I am here to help you create your CV.\")\r\n        self.speak()\r\n\r\n\r\n    def compute_avg_vec(self, list):\r\n        vector = np.array([nlp(elem).vector for elem in list]).mean(axis=0)\r\n        return vector\r\n\r\n    def get_current_stage_name(self):\r\n        stage, _ = self.history[-1]\r\n        return stage\r\n    def get_current_stage_data(self):\r\n        return data[self.get_current_stage_name()]\r\n    def get_previous_stage(self):\r\n        if len(self.history) > 1:\r\n            stage, _ = self.history[-1]\r\n            return stage\r\n        else:\r\n            return None  # Todo add error handling\r\n\r\n    def add_new_stage(self, position):\r\n        self.history.append((position, []))\r\n\r\n    def get_current_question_name(self):\r\n        _, questions = self.history[-1]\r\n        if questions:\r\n            return questions[-1]\r\n        else:\r\n            None  # Todo add error handling\r\n\r\n    def get_current_question_data(self):\r\n        return data[self.get_current_stage_name()][self.get_current_question_name()]\r\n\r\n    def get_previous_question_name(self):\r\n        _, questions = self.history[-1]\r\n        if len(questions) > 1:\r\n            return questions[-2]\r\n        else:\r\n            None  # Todo add error handling\r\n\r\n    def add_question_to_history(self, question):\r\n        self.history[-1][1].append(question)\r\n\r\n    def handle_error(self, user_input, type):\r\n        if type == check_data_error:\r\n            print(\"Sorry unfortunately we couldn't find the data you were looking for.\")\r\n            new_input = input(\"Do you want to continue or try again?\")\r\n            if new_input.__contains__(\"again\"):\r\n                return self.classify(input(\"Please state your request again.\"))\r\n            else:\r\n                return None\r\n\r\n    # ask according to the current position\r\n    def ask(self, question):\r\n        # get the answer from the user or from the debug data\r\n        current_question = self.get_current_question_data()\r\n        if debug:\r\n            print(current_question[question_num])\r\n            answer = debug_data[self.get_current_stage()][question]\r\n        else:\r\n            answer = input(current_question[question_num] + \"\\n\")\r\n        if debug:\r\n            print(answer)\r\n        return answer\r\n\r\n    # agent starts to speak with user\r\n    def speak(self):\r\n        for position in self.data.keys():\r\n            # add the new stage to the history\r\n            self.add_new_stage(position)\r\n            # get the value of the dict of the current stage (eg, Name, Birthdate ...)\r\n            current_stage = self.get_current_stage_data()\r\n            # go through all questions for the current stage, e.g. What is your name?\r\n            for question in current_stage:\r\n                # get processed input by user\r\n                self.add_question_to_history(question)\r\n                processed_input = self.understanding(self.ask(question))\r\n\r\n                # store data\r\n                current_question = self.get_current_question_data()\r\n                data_dict = current_question[data_store]\r\n                data_dict[list(data_dict)[0]] = processed_input\r\n\r\n                print(data)\r\n\r\n                # education and working experience\r\n                self.sev_bullet_points()\r\n\r\n    def understanding(self, user_input):\r\n        input_type = self.classify(user_input)\r\n        if input_type == \"answer\":\r\n            return self.get_data(user_input)\r\n        else:\r\n            print_data(input_type)\r\n            return self.understanding(self.ask(self.get_current_question_name()))\r\n\r\n    # Possible returns are \"answer\" or the stage that is supposed to get printed\r\n    def classify(self, user_input):\r\n        user_input_vec = np.array(nlp(user_input).vector)\r\n        cosine = np.dot(user_input_vec, self.check_data_vec) / (norm(user_input_vec) * norm(self.check_data_vec))\r\n        if cosine > 0.3:\r\n            if any(e in user_input for e in check_prev):\r\n                return self.get_previous_stage()\r\n            else:\r\n                for key in self.data.keys():\r\n                    if user_input.__contains__(key):\r\n                        return key\r\n                return self.handle_error(self, user_input, check_data_error)\r\n        return \"answer\"\r\n\r\n    def get_data(self, input):\r\n        user_data = []\r\n        # check if we are only looking for regex and not the SpaCy model\r\n        current_question = self.get_current_question_data()\r\n        necessary_entities = [element for innerList in current_question[fun_num].keys() for element in\r\n                              innerList]\r\n        doc = nlp(input)\r\n        for entity in doc.ents:\r\n            for type in necessary_entities:\r\n                if entity.label_ == type:\r\n                    user_data.append(entity.text)\r\n        print(user_data)\r\n        return user_data\r\n\r\n\r\n    def sev_bullet_points(self):\r\n        counter = 0\r\n        position = self.get_current_stage_name()\r\n        if position == 'Education' or position == 'Experience':\r\n            while True:\r\n                inp = input('If you would like to add another ' + str(position) + 'step enter the '\r\n                                                                                       'information in '\r\n                                                                                       'the same format '\r\n                                                                                       'as already done. '\r\n                                                                                       'Otherwise press '\r\n                                                                                       'Enter' + \"\\n\")\r\n\r\n                if inp == \"\":\r\n                    break;\r\n                else:\r\n                    # process the given input\r\n                    processed_input = self.understanding(inp)\r\n\r\n                    # create new dictionary element\r\n                    print(self.get_current_stage_data())\r\n                    stage = self.get_current_stage_data()\r\n                    stage[('Step' + str(counter + 2))] = [None,\r\n                                                                       {(\"DATE\", \"DATE\", \"CARDINAL\", \"ORG\"): processed_input}]\r\n                print(data)\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/dialog.py b/dialog.py
---- a/dialog.py	(revision 18c840486116d86ee0c8f44667ddb81aee5cee7d)
-+++ b/dialog.py	(date 1669476443976)
-@@ -32,17 +32,15 @@
-             stage, _ = self.history[-1]
-             return stage
-         else:
--            return None  # Todo add error handling
-+            return self.handle_error("", no_prev_error)
- 
-     def add_new_stage(self, position):
-         self.history.append((position, []))
- 
-     def get_current_question_name(self):
-         _, questions = self.history[-1]
--        if questions:
--            return questions[-1]
--        else:
--            None  # Todo add error handling
-+        return questions[-1]
-+
- 
-     def get_current_question_data(self):
-         return data[self.get_current_stage_name()][self.get_current_question_name()]
-@@ -52,19 +50,48 @@
-         if len(questions) > 1:
-             return questions[-2]
-         else:
--            None  # Todo add error handling
-+            return self.handle_error("", no_prev_error)
- 
-     def add_question_to_history(self, question):
-         self.history[-1][1].append(question)
- 
-+    def print_data(self, elem):
-+        if not elem:
-+            return
-+        text = ""
-+        show = False
-+        for stage in self.data.keys():
-+
-+            found_data = False
-+            stage_text = ""
-+            if stage.__contains__(elem):
-+                stage_text += stage + ":\n"
-+
-+            for sub_stage in self.data[stage]:
-+                if stage.__contains__(elem) or sub_stage.__contains__(elem):
-+                    stage_text += sub_stage + ":"
-+                    for data in list(self.data[stage][sub_stage][1].values()):
-+                        if data:
-+                            found_data = True
-+                            stage_text += str(data) + " "
-+            if found_data and stage_text != "":
-+                text += stage_text + "\n"
-+        if text != "":
-+            print(text)
-+        else:
-+            print("I didn't found any data to show you")
-+
-     def handle_error(self, user_input, type):
-         if type == check_data_error:
-             print("Sorry unfortunately we couldn't find the data you were looking for.")
--            new_input = input("Do you want to continue or try again?")
--            if new_input.__contains__("again"):
--                return self.classify(input("Please state your request again."))
-+            new_input = input("Do you want to continue or try again? \n")
-+            if any(ele in new_input for ele in ["again", "Again"]):
-+                return self.classify(input("Please state your request again. \n"))
-             else:
-                 return None
-+        elif type == no_prev_error:
-+            raise Exception("Tried to look at previous data, without any existing")
-+
- 
-     # ask according to the current position
-     def ask(self, question):
-@@ -104,11 +131,12 @@
- 
-     def understanding(self, user_input):
-         input_type = self.classify(user_input)
--        if input_type == "answer":
-+        if not input_type or input_type != "answer":
-+            self.print_data(input_type)
-+            return self.understanding(self.ask(self.get_current_question_name()))
-+        elif input_type == "answer":
-             return self.get_data(user_input)
--        else:
--            print_data(input_type)
--            return self.understanding(self.ask(self.get_current_question_name()))
-+
- 
-     # Possible returns are "answer" or the stage that is supposed to get printed
-     def classify(self, user_input):
-@@ -119,9 +147,9 @@
-                 return self.get_previous_stage()
-             else:
-                 for key in self.data.keys():
--                    if user_input.__contains__(key):
-+                    if str.lower(user_input).__contains__(str.lower(key)):
-                         return key
--                return self.handle_error(self, user_input, check_data_error)
-+                return self.handle_error(user_input, check_data_error)
-         return "answer"
- 
-     def get_data(self, input):
-Index: utils.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import re\r\nimport spacy\r\n\r\n\r\n# currently loading spacy during every execution\r\n\r\n\r\n# checks if the given input of the user actually contains the necessary information\r\n\r\n\r\ndef format_data(data, all_data, types):\r\n    formated_data = []\r\n    if len(data) % len(types) != 0:\r\n        all_data_text = \" \".join([d.text for d in all_data])\r\n        data_text = \" \".join([d.text for d in data])\r\n        types_text = \", \".join([t for t in types])\r\n        raise Exception(\"format_data: Looked for \" + types_text + \" Found \" + str(\r\n            len(data)) + \" data, which isn't possible to put into \" + len(\r\n            types) + \" fields.\" + \"\\n data: \" + data_text + \"\\n all data: \" + all_data_text)\r\n\r\n    for i in range(len(data) % len(types)):\r\n        current_data_set = data[(i * len(types)):((i + 1) * len(types))]\r\n\r\n        formated_data.append(data[(i * len(types)):((i + 1) * len(types))])\r\n\r\n\r\n# filter for valid inputs by user\r\nname_re = \"([A-Z]|[a-z])[a-z]+ ([A-Z]|[a-z])[a-z]+( ([A-Z]|[a-z])[a-z]+)*\"\r\ndate_re = \"([0-3]?[0-9].[0-1]?[0-9].[1-2][0-9][0-9][0-9])|([0-3]?[0-9]/[0-1]?[0-9]/[1-2][0-9][0-9][0-9])\"\r\nmail_re = \".+@.+\\..+\"\r\naddress_re = \"[A-Z][a-z]*.? [0-9]*\"\r\neduc_re = None\r\nexper_re = None\r\nsocial_re = None\r\nskills_re = None\r\ninterests_re = None\r\n\r\n\r\ndef to_string(t):\r\n    return \" \".join(t)\r\n\r\n\r\ndef print_cv(user_data):\r\n    indent = \"   \"\r\n    cv = \"C I R R I C U L U M   V I T A E\\n\"\r\n    for stage in data.keys():\r\n        contains_data = False\r\n        stage_text = stage + \":\\n\"\r\n        for sub_headline in user_data[stage].keys():\r\n            if user_data[stage][sub_headline][data_num] != None:\r\n                contains_data = True\r\n                stage_text += indent + sub_headline + \":\\n\"\r\n                stage_text += indent + indent + user_data[stage][sub_headline][data_num] + \"\\n\"\r\n        if contains_data:\r\n            cv += stage_text + \"\\n\"\r\n    print(cv)\r\n\r\n\r\ndata = {\"Personal Data\":\r\n    {\r\n        \"Name\": [\"What is your full name?\", {(\"PERSON\", \"\"): None}],\r\n        \"Birthdate\": [\"What is your date of birth?\", {(\"DATE\", \"CARDINAL\"): None}],\r\n        \"E-Mail\": [\"Please tell me your email.\", {(\"E-Mail\", \"\"): None}],\r\n        \"Address\": [\"Please state your address.\", {(\"Address\", \"CARDINAL\"): None}]\r\n    },\r\n    \"Education\":\r\n        {\r\n            \"Step 1\": [\"Please state an education step containing the teaching institution, a start date \"\r\n                       \"and a end date.\",\r\n                       {(\"DATE\", \"CARDINAL\"): None,\r\n                        (\"DATE\", \"CARDINAL\"): None,\r\n                        (\"ORG\"): None}]\r\n        },\r\n    \"Experience\":\r\n        {\r\n            \"Step 1\": [\"Please state your work experience steps in bullet points or in the form of a \"\r\n                       \"continuous text.\",\r\n                       {(\"DATE\", \"CARDINAL\"): None}]\r\n        },\r\n    \"Social Engagement\":\r\n        {\r\n            \"Step 1\": [\"Please state your social engagements steps in bullet points or in the form of a \"\r\n                               \"continuous text.\",\r\n                               {(\"DATE\", \"CARDINAL\"): None}]\r\n        },\r\n    \"Skills\":\r\n        {\r\n            \"Skills\": [\"Please state your work experience steps in bullet points or in the form of a \"\r\n                       \"continuous text.\",\r\n                       {(\"DATE\", \"CARDINAL\"): None,\r\n                        (\"DATE\", \"CARDINAL\"): None,\r\n                        (\"ORG\", \"\"): None}]\r\n        },\r\n    \"Interests\":\r\n        {\r\n            \"Interests\": [\"If you would like to state any personal interests in your CV please enter them here: \",\r\n                          {(\"DATE\", \"CARDINAL\"): None,\r\n                           (\"DATE\", \"CARDINAL\"): None,\r\n                           (\"ORG\", \"\"): None}]\r\n        }\r\n}\r\ndebug_data = {\"Personal Data\":\r\n    {\r\n        \"Name\": \"Max Mustermann\",\r\n        \"Birthdate\": \"20.12.2017\",\r\n        \"E-Mail\": \"abc@gmail.com\",\r\n        \"Address\": \"Bauerstr. 4\"\r\n    },\r\n    \"Education\":\r\n        {\r\n            \"Education_history\": \"From 2010 to 2019 I went to the Louise Schroeder School in Germany. After that, \"\r\n                                 \"starting in 2020 I started my studies at the Technical University of Munich until 2023. \"\r\n                                 \"From 2022 to 2022 it did an exchange abroad at the University Pompue Fabra\"\r\n        },\r\n    \"Experience\":\r\n        {\r\n            \"Experience_history\": \"asdfasdfasdfasdfasdf\"\r\n        },\r\n    \"Social Engagement\":\r\n        {\r\n            \"Social_history\": \"asdfasdfasdfasdf\"\r\n        },\r\n    \"Skills\":\r\n        {\r\n            \"Skills\": \"asdfjashdfkajsdhf\"\r\n        },\r\n    \"Interests\":\r\n        {\r\n            \"Interests\": \"asdhfakjsdhfasdf\"\r\n        },\r\n}\r\n\r\ncheck_data_questions = [\"Can you show me what I entered for X?\",\r\n                        \"What did you put as?\", \"Show me my X.\",\r\n                        \"What are my X?\"\r\n                        ]\r\ncheck_prev = [\"Last\", \"last\", \"previous\", \"Previous\"]\r\n\r\ndef print_data(stage):\r\n    print(\"Requested to print the stage \" + stage)\r\n\r\ncheck_data_error = \"check_data_not_found\"\r\n\r\nquestion_num = 0\r\nfun_num = 1\r\ndata_num = 2\r\ndebug = False\r\ndata_store = 1\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/utils.py b/utils.py
---- a/utils.py	(revision 18c840486116d86ee0c8f44667ddb81aee5cee7d)
-+++ b/utils.py	(date 1669474941217)
-@@ -136,10 +136,12 @@
-                         ]
- check_prev = ["Last", "last", "previous", "Previous"]
- 
--def print_data(stage):
--    print("Requested to print the stage " + stage)
- 
-+
-+# Error codes
- check_data_error = "check_data_not_found"
-+no_prev_error = "prev"
-+
- 
- question_num = 0
- fun_num = 1
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" name=\"Changes\" comment=\"add readme.md\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_10__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_10__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_17__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_17__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_47__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_47__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_47__Changes_1.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_47__Changes_1.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_55__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_55__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_10_22__14_05__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_10_22__14_05__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_10_22__14_05__Changes_by_Julian_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_10_22__14_05__Changes_by_Julian_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dialog.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/dialog.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/utils.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/utils.py\" afterDir=\"false\" />\r\n    </list>\r\n    <list id=\"d940c511-92f0-4fb1-bee5-601ff7e2efda\" name=\"Changes by danielbier\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Jupyter Notebook\" />\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2GaQfpjOf9rEUTWkdg4KFLWfbUW\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;codeWithMe.voiceChat.enabledByDefault&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/kraus/OneDrive/Uni/Semester 5 - Barcelona/Term 1/AI/P-03/reinforcement&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"CV-Bot\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"true\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"CV-Bot\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" name=\"Changes\" comment=\"\" />\r\n      <created>1666624320371</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1666624320371</updated>\r\n      <workItem from=\"1666624324547\" duration=\"3914000\" />\r\n      <workItem from=\"1666707462917\" duration=\"24000\" />\r\n      <workItem from=\"1667220446521\" duration=\"2463000\" />\r\n      <workItem from=\"1668082266353\" duration=\"57000\" />\r\n      <workItem from=\"1668349949463\" duration=\"9077000\" />\r\n      <workItem from=\"1668771685506\" duration=\"47000\" />\r\n      <workItem from=\"1669282439560\" duration=\"10646000\" />\r\n      <workItem from=\"1669300612743\" duration=\"27000\" />\r\n      <workItem from=\"1669389294498\" duration=\"687000\" />\r\n      <workItem from=\"1669464900000\" duration=\"7630000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"add readme.md\">\r\n      <created>1667490598481</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1667490598481</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"add readme.md\">\r\n      <created>1669470813553</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669470813553</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"add readme.md\">\r\n      <created>1669470895329</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669470895329</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"add readme.md\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"add readme.md\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/main.py</url>\r\n          <line>6</line>\r\n          <option name=\"timeStamp\" value=\"5\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/dialog.py</url>\r\n          <line>104</line>\r\n          <option name=\"timeStamp\" value=\"15\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/CV_Bot$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1669471950715\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 18c840486116d86ee0c8f44667ddb81aee5cee7d)
-+++ b/.idea/workspace.xml	(date 1669476443990)
-@@ -4,14 +4,7 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="5649b55e-c08f-47c7-b4e3-720abb9a88ae" name="Changes" comment="add readme.md">
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_10__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_10__Changes_.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_17__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_17__Changes_.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_47__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_47__Changes_.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_47__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_47__Changes_1.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_55__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_55__Changes_.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_10_22__14_05__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_10_22__14_05__Changes_.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_10_22__14_05__Changes_by_Julian_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_31_10_22__14_05__Changes_by_Julian_.xml" afterDir="false" />
-+    <list default="true" id="5649b55e-c08f-47c7-b4e3-720abb9a88ae" name="Changes" comment="merged">
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/dialog.py" beforeDir="false" afterPath="$PROJECT_DIR$/dialog.py" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/utils.py" beforeDir="false" afterPath="$PROJECT_DIR$/utils.py" afterDir="false" />
-@@ -119,7 +112,7 @@
-       <workItem from="1669282439560" duration="10646000" />
-       <workItem from="1669300612743" duration="27000" />
-       <workItem from="1669389294498" duration="687000" />
--      <workItem from="1669464900000" duration="7630000" />
-+      <workItem from="1669464900000" duration="11435000" />
-     </task>
-     <task id="LOCAL-00001" summary="add readme.md">
-       <created>1667490598481</created>
-@@ -142,7 +135,14 @@
-       <option name="project" value="LOCAL" />
-       <updated>1669470895329</updated>
-     </task>
--    <option name="localTasksCounter" value="4" />
-+    <task id="LOCAL-00004" summary="merged">
-+      <created>1669472620033</created>
-+      <option name="number" value="00004" />
-+      <option name="presentableId" value="LOCAL-00004" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1669472620033</updated>
-+    </task>
-+    <option name="localTasksCounter" value="5" />
-     <servers />
-   </component>
-   <component name="TypeScriptGeneratedFilesManager">
-@@ -162,7 +162,8 @@
-   <component name="VcsManagerConfiguration">
-     <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
-     <MESSAGE value="add readme.md" />
--    <option name="LAST_COMMIT_MESSAGE" value="add readme.md" />
-+    <MESSAGE value="merged" />
-+    <option name="LAST_COMMIT_MESSAGE" value="merged" />
-   </component>
-   <component name="XDebuggerManager">
-     <breakpoint-manager>
-@@ -174,13 +175,18 @@
-         </line-breakpoint>
-         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-           <url>file://$PROJECT_DIR$/dialog.py</url>
--          <line>104</line>
-+          <line>131</line>
-           <option name="timeStamp" value="15" />
-         </line-breakpoint>
-+        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-+          <url>file://$PROJECT_DIR$/dialog.py</url>
-+          <line>60</line>
-+          <option name="timeStamp" value="18" />
-+        </line-breakpoint>
-       </breakpoints>
-     </breakpoint-manager>
-   </component>
-   <component name="com.intellij.coverage.CoverageDataManagerImpl">
--    <SUITE FILE_PATH="coverage/CV_Bot$main.coverage" NAME="main Coverage Results" MODIFIED="1669471950715" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-+    <SUITE FILE_PATH="coverage/CV_Bot$main.coverage" NAME="main Coverage Results" MODIFIED="1669476331605" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_55__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_55__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_55__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_55__Changes_.xml	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ /dev/null	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_26_11_22,_14_55_[Changes]" date="1669470905762" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_14_55_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 26.11.22, 14:55 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_14_55_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_14_55_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_14_55_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_14_55_[Changes]/shelved.patch	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ /dev/null	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
@@ -1,361 +0,0 @@
-Index: utils.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import re\nimport spacy\n\n\n# currently loading spacy during every execution\n\n\n# checks if the given input of the user actually contains the necessary information\n\n\ndef format_data(data, all_data, types):\n    formated_data = []\n    if len(data) % len(types) != 0:\n        all_data_text = \" \".join([d.text for d in all_data])\n        data_text = \" \".join([d.text for d in data])\n        types_text = \", \".join([t for t in types])\n        raise Exception(\"format_data: Looked for \" + types_text + \" Found \" + str(\n            len(data)) + \" data, which isn't possible to put into \" + len(\n            types) + \" fields.\" + \"\\n data: \" + data_text + \"\\n all data: \" + all_data_text)\n\n    for i in range(len(data) % len(types)):\n        current_data_set = data[(i * len(types)):((i + 1) * len(types))]\n\n        formated_data.append(data[(i * len(types)):((i + 1) * len(types))])\n\n\n# filter for valid inputs by user\nname_re = \"([A-Z]|[a-z])[a-z]+ ([A-Z]|[a-z])[a-z]+( ([A-Z]|[a-z])[a-z]+)*\"\ndate_re = \"([0-3]?[0-9].[0-1]?[0-9].[1-2][0-9][0-9][0-9])|([0-3]?[0-9]/[0-1]?[0-9]/[1-2][0-9][0-9][0-9])\"\nmail_re = \".+@.+\\..+\"\naddress_re = \"[A-Z][a-z]*.? [0-9]*\"\neduc_re = None\nexper_re = None\nsocial_re = None\nskills_re = None\ninterests_re = None\n\n\ndef to_string(t):\n    return \" \".join(t)\n\n\ndef print_cv(user_data):\n    indent = \"   \"\n    cv = \"C I R R I C U L U M   V I T A E\\n\"\n    for stage in data.keys():\n        contains_data = False\n        stage_text = stage + \":\\n\"\n        for sub_headline in user_data[stage].keys():\n            if user_data[stage][sub_headline][data_num] != None:\n                contains_data = True\n                stage_text += indent + sub_headline + \":\\n\"\n                stage_text += indent + indent + user_data[stage][sub_headline][data_num] + \"\\n\"\n        if contains_data:\n            cv += stage_text + \"\\n\"\n    print(cv)\n\n\ndata = {\"Personal Data\":\n    {\n        \"Name\": [\"What is your full name?\", {(\"PERSON\", \"\"): None}],\n        \"Birthdate\": [\"What is your date of birth?\", {(\"DATE\", \"CARDINAL\"): None}],\n        \"E-Mail\": [\"Please tell me your email.\", lambda t: re.search(mail_re, t).group(), None],\n        \"Address\": [\"Please state your address.\", lambda t: re.search(address_re, t).group(), None]\n    },\n    \"Education\":\n        {\n            \"Education_history\": [\"Please state your educational steps in the form of a \"\n                                  \"continuous text. For each educational step please enter a time frame, \"\n                                  \"the educational step and the name of the teaching institution\",\n                                  {(\"DATE\", \"CARDINAL\"): None,\n                                   (\"DATE\", \"CARDINAL\"): None,\n                                   (\"ORG\", \"\"): None}]\n        },\n    \"Experience\":\n        {\n            \"Experience_history\": [\"Please state your work experience steps in bullet points or in the form of a \"\n                                   \"continuous text.\",\n                                   {(\"DATE\", \"CARDINAL\"): None,\n                                    (\"DATE\", \"CARDINAL\"): None,\n                                    (\"ORG\", \"\"): None}]\n        },\n    \"Social Engagement\":\n        {\n            \"Social_history\": [\"Please state your social engagements steps in bullet points or in the form of a \"\n                               \"continuous text.\",\n                               {(\"DATE\", \"CARDINAL\"): None,\n                                (\"DATE\", \"CARDINAL\"): None,\n                                (\"ORG\", \"\"): None}]\n        },\n    \"Skills\":\n        {\n            \"Skills\": [\"Please state your work experience steps in bullet points or in the form of a \"\n                       \"continuous text.\",\n                       {(\"DATE\", \"CARDINAL\"): None,\n                        (\"DATE\", \"CARDINAL\"): None,\n                        (\"ORG\", \"\"): None}]\n        },\n    \"Interests\":\n        {\n            \"Interests\": [\"If you would like to state any personal interests in your CV please enter them here: \",\n                          {(\"DATE\", \"CARDINAL\"): None,\n                           (\"DATE\", \"CARDINAL\"): None,\n                           (\"ORG\", \"\"): None}]\n        },\n}\n# data = {\"Personal Data\":\n#     {\n#         \"Name\": [\"What is your full name?\", lambda doc: get_data(1, [\"PERSON\"], doc, to_string), None],\n#         \"Birthdate\": [\"What is your date of birth?\", lambda doc: get_data(1, [\"DATE\", \"CARDINAL\"], doc, to_string),\n#                       None],\n#         \"E-Mail\": [\"Please tell me your email.\", lambda t: re.search(mail_re, t).group(), None],\n#         \"Address\": [\"Please state your address.\", lambda t: re.search(address_re, t).group(), None]\n#         # TODO Train spaCY on adresses\n#     },\n#     \"Education\":\n#         {\n#             \"Education_history\": [\"Please state your educational steps in the form of a \"\n#                                   \"continuous text. For each educational step please enter a time frame, \"\n#                                   \"the educational step and the name of the teaching institution\",\n#                                   lambda doc: get_data(-1, [\"DATE\", \"ORG\"], doc, to_string), None]\n#         },\n#     \"Experience\":\n#         {\n#             \"Experience_history\": [\"Please state your work experience steps in bullet points or in the form of a \"\n#                                    \"continuous text.\", lambda x: x, None]\n#         },\n#     \"Social Engagement\":\n#         {\n#             \"Social_history\": [\"Please state your social engagements steps in bullet points or in the form of a \"\n#                                \"continuous text.\", lambda x: x, None]\n#         },\n#     \"Skills\":\n#         {\n#             \"Skills\": [\"Please state your work experience steps in bullet points or in the form of a \"\n#                        \"continuous text.\", lambda x: x, None]\n#         },\n#     \"Interests\":\n#         {\n#             \"Interests\": [\"If you would like to state any personal interests in your CV please enter them here: \",\n#                           lambda x: x, None]\n#         },\n# }\ndebug_data = {\"Personal Data\":\n    {\n        \"Name\": \"Max Mustermann\",\n        \"Birthdate\": \"20.12.2017\",\n        \"E-Mail\": \"abc@gmail.com\",\n        \"Address\": \"Bauerstr. 4\"\n    },\n    \"Education\":\n        {\n            \"Education_history\": \"From 2010 to 2019 I went to the Louise Schroeder School in Germany. After that, \"\n                                 \"starting in 2020 I started my studies at the Technical University of Munich until 2023. \"\n                                 \"From 2022 to 2022 it did an exchange abroad at the University Pompue Fabra\"\n        },\n    \"Experience\":\n        {\n            \"Experience_history\": \"asdfasdfasdfasdfasdf\"\n        },\n    \"Social Engagement\":\n        {\n            \"Social_history\": \"asdfasdfasdfasdf\"\n        },\n    \"Skills\":\n        {\n            \"Skills\": \"asdfjashdfkajsdhf\"\n        },\n    \"Interests\":\n        {\n            \"Interests\": \"asdhfakjsdhfasdf\"\n        },\n}\n\ncheck_data_questions = [\"Can you show me what I entered for X?\",\n                        \"What did you put as?\", \"Show me my X.\",\n                        \"What are my X?\"\n                        ]\ncheck_prev = [\"Last\", \"last\", \"previous\", \"Previous\"]\n\ndef print_data(stage):\n    print(\"Requested to print the stage \" + stage)\n\ncheck_data_error = \"check_data_not_found\"\n\nquestion_num = 0\nfun_num = 1\ndata_num = 2\ndebug = False\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/utils.py b/utils.py
---- a/utils.py	(revision 6bbf81ab52715f87377532a639a7eff9ce22e93d)
-+++ b/utils.py	(date 1669470446728)
-@@ -60,33 +60,26 @@
-     {
-         "Name": ["What is your full name?", {("PERSON", ""): None}],
-         "Birthdate": ["What is your date of birth?", {("DATE", "CARDINAL"): None}],
--        "E-Mail": ["Please tell me your email.", lambda t: re.search(mail_re, t).group(), None],
--        "Address": ["Please state your address.", lambda t: re.search(address_re, t).group(), None]
-+        "E-Mail": ["Please tell me your email.", {("E-Mail", ""): None}],
-+        "Address": ["Please state your address.", {("Address", "CARDINAL"): None}]
-     },
-     "Education":
-         {
--            "Education_history": ["Please state your educational steps in the form of a "
--                                  "continuous text. For each educational step please enter a time frame, "
--                                  "the educational step and the name of the teaching institution",
--                                  {("DATE", "CARDINAL"): None,
--                                   ("DATE", "CARDINAL"): None,
--                                   ("ORG", ""): None}]
-+            "Step 1": ["PLease state an education step containing the teaching institution, a start date "
-+                       "and a end date.",
-+                       {("DATE", "CARDINAL"): None}]
-         },
-     "Experience":
-         {
--            "Experience_history": ["Please state your work experience steps in bullet points or in the form of a "
--                                   "continuous text.",
--                                   {("DATE", "CARDINAL"): None,
--                                    ("DATE", "CARDINAL"): None,
--                                    ("ORG", ""): None}]
-+            "Step 1": ["Please state your work experience steps in bullet points or in the form of a "
-+                       "continuous text.",
-+                       {("DATE", "CARDINAL"): None}]
-         },
-     "Social Engagement":
-         {
--            "Social_history": ["Please state your social engagements steps in bullet points or in the form of a "
-+            "Step 1": ["Please state your social engagements steps in bullet points or in the form of a "
-                                "continuous text.",
--                               {("DATE", "CARDINAL"): None,
--                                ("DATE", "CARDINAL"): None,
--                                ("ORG", ""): None}]
-+                               {("DATE", "CARDINAL"): None}]
-         },
-     "Skills":
-         {
-@@ -104,43 +97,7 @@
-                            ("ORG", ""): None}]
-         },
- }
--# data = {"Personal Data":
--#     {
--#         "Name": ["What is your full name?", lambda doc: get_data(1, ["PERSON"], doc, to_string), None],
--#         "Birthdate": ["What is your date of birth?", lambda doc: get_data(1, ["DATE", "CARDINAL"], doc, to_string),
--#                       None],
--#         "E-Mail": ["Please tell me your email.", lambda t: re.search(mail_re, t).group(), None],
--#         "Address": ["Please state your address.", lambda t: re.search(address_re, t).group(), None]
--#         # TODO Train spaCY on adresses
--#     },
--#     "Education":
--#         {
--#             "Education_history": ["Please state your educational steps in the form of a "
--#                                   "continuous text. For each educational step please enter a time frame, "
--#                                   "the educational step and the name of the teaching institution",
--#                                   lambda doc: get_data(-1, ["DATE", "ORG"], doc, to_string), None]
--#         },
--#     "Experience":
--#         {
--#             "Experience_history": ["Please state your work experience steps in bullet points or in the form of a "
--#                                    "continuous text.", lambda x: x, None]
--#         },
--#     "Social Engagement":
--#         {
--#             "Social_history": ["Please state your social engagements steps in bullet points or in the form of a "
--#                                "continuous text.", lambda x: x, None]
--#         },
--#     "Skills":
--#         {
--#             "Skills": ["Please state your work experience steps in bullet points or in the form of a "
--#                        "continuous text.", lambda x: x, None]
--#         },
--#     "Interests":
--#         {
--#             "Interests": ["If you would like to state any personal interests in your CV please enter them here: ",
--#                           lambda x: x, None]
--#         },
--# }
-+
- debug_data = {"Personal Data":
-     {
-         "Name": "Max Mustermann",
-@@ -171,19 +128,8 @@
-             "Interests": "asdhfakjsdhfasdf"
-         },
- }
--
--check_data_questions = ["Can you show me what I entered for X?",
--                        "What did you put as?", "Show me my X.",
--                        "What are my X?"
--                        ]
--check_prev = ["Last", "last", "previous", "Previous"]
--
--def print_data(stage):
--    print("Requested to print the stage " + stage)
--
--check_data_error = "check_data_not_found"
--
- question_num = 0
-+data_store = 1
- fun_num = 1
- data_num = 2
- debug = False
-Index: dialog.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>from utils import *\nimport keyboard\nimport numpy as np\nfrom numpy.linalg import norm\n\nspacy.cli.download(\"en_core_web_sm\")\nnlp = spacy.load('en_core_web_sm')\n\n\nclass Dialog:\n\n    def __init__(self):\n        self.data = data.copy()\n        self.history = []\n        self.check_data_vec = self.compute_avg_vec(check_data_questions)\n        print(\"Hello, I am CV-Bot. I am here to help you create your CV.\")\n        self.speak()\n\n    def compute_avg_vec(self, list):\n        vector = np.array([nlp(elem).vector for elem in list]).mean(axis=0)\n        return vector\n\n    def get_current_stage(self):\n        stage, _ = self.history[-1]\n        return stage\n\n    def get_previous_stage(self):\n        if len(self.history) > 1:\n            stage, _ = self.history[-1]\n            return stage\n        else:\n            return None  # Todo add error handling\n\n    def add_new_stage(self, position):\n        self.history.append((position, []))\n\n    def get_current_question(self):\n        _, questions = self.history[-1]\n        if questions:\n            return questions[-1]\n        else:\n            None  # Todo add error handling\n\n    def get_previous_question(self):\n        _, questions = self.history[-1]\n        if len(questions) > 1:\n            return questions[-2]\n        else:\n            None  # Todo add error handling\n\n    def add_question_to_history(self, question):\n        self.history[-1][1].append(question)\n\n    def handle_error(self, user_input, type):\n        if type == check_data_error:\n            print(\"Sorry unfortunately we couldn't find the data you were looking for.\")\n            new_input = input(\"Do you want to continue or try again?\")\n            if new_input.__contains__(\"again\"):\n                return self.classify(input(\"Please state your request again.\"))\n            else:\n                return None\n    # ask the question according to the current position\n    def ask(self, question):\n        # get the answer from the user or from the debug data\n        current_question = self.data[self.get_current_stage()][self.get_current_question()]\n        if debug:\n            print(current_question[question_num])\n            answer = debug_data[self.get_current_stage()][question]\n        else:\n            answer = input(current_question[question_num] + \"\\n\")\n        if debug:\n            print(answer)\n        return answer\n\n    def listen(self, input):\n        ...\n        # wait as long as keyboard is pressed\n\n    # agent starts to speak with user\n    def speak(self):\n        for position in self.data.keys():\n            # add the new stage to the history\n            self.add_new_stage(position)\n            # get the value of the dict of the current stage (eg, Name, Birthdate ...)\n            current_stage = self.data[self.get_current_stage()]\n            # go through all questions for the current stage, e.g. What is your name?\n            for question in current_stage:\n                self.add_question_to_history(question)\n                current_question = current_stage[question]\n                if question == \"E-Mail\" or question == \"Address\":\n                    processed_input = current_question[fun_num](self.ask(question))\n                else:\n                    processed_input = self.understanding(self.ask(question))\n                    self.map_input_to_data(processed_input)\n\n    def understanding(self, user_input):\n        input_type = self.classify(user_input)\n        if input_type == \"answer\":\n            return self.get_data(user_input)\n        else:\n            print_data(input_type)\n            return self.understanding(self.ask(self.get_current_question()))\n\n    # Possible returns are \"answer\" or the stage that is supposed to get printed\n    def classify(self, user_input):\n        user_input_vec = np.array(nlp(user_input).vector)\n        cosine = np.dot(user_input_vec, self.check_data_vec) / (norm(user_input_vec) * norm(self.check_data_vec))\n        if cosine > 0.3:\n            if any(e in user_input for e in check_prev):\n                return self.get_previous_stage()\n            else:\n                for key in self.data.keys():\n                    if user_input.__contains__(key):\n                        return key\n                return self.handle_error(self, user_input, check_data_error)\n        return \"answer\"\n\n    def get_data(self, input):\n        user_data = []\n        # check if we are only looking for regex and not the SpaCy model\n        current_question = self.data[self.get_current_stage()][self.get_current_question()]\n        necessary_entities = [element for innerList in current_question[fun_num].keys() for element in\n                              innerList]\n        doc = nlp(input)\n        for entity in doc.ents:\n            for type in necessary_entities:\n                if entity.label_ == type:\n                    user_data.append(entity.text)\n        print(user_data)\n        return user_data\n\n    # if \"DATE\" in types:\n    #     answer = answer.replace(\".\", \"/\")\n    #     answer = answer.replace(\",\", \"/\")\n    #\n    # doc = nlp(answer)\n    # data = []\n    # # filter all entities that are our searched type\n    # for entity in doc.ents:\n    #     for t in types:\n    #         if entity.label_ == t:\n    #             data.append(entity.text)\n    # # check if we found the correct data\n    # if 0 < numData != len(data):\n    #     data_text = \" \".join([d.text for d in data])\n    #     types_text = \", \".join([t for t in types])\n    #     doc_data_text = \" \".join([\"(\" + d.text + \", \" + d.label_ + \") \" for d in doc.ents])\n    #     raise Exception(\"get_data: Looked for \" + types_text + \" Found \" + str(\n    #         len(data)) + \"data, while expecting \" + str(\n    #         numData) + \" \\n The found data are \" + data_text + \"\\n the data in the doc is \" + doc_data_text)\n    # else:\n    #     return format_fun(data)\n\n    def map_input_to_data(self, user_data):\n        print(\"Needs to mapped\")\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/dialog.py b/dialog.py
---- a/dialog.py	(revision 6bbf81ab52715f87377532a639a7eff9ce22e93d)
-+++ b/dialog.py	(date 1669470755035)
-@@ -1,7 +1,7 @@
-+import spacy as spacy
-+
- from utils import *
- import keyboard
--import numpy as np
--from numpy.linalg import norm
- 
- spacy.cli.download("en_core_web_sm")
- nlp = spacy.load('en_core_web_sm')
-@@ -10,125 +10,88 @@
- class Dialog:
- 
-     def __init__(self):
-+        self.state = "asd"
-+        self.position = "Personal Data"
-         self.data = data.copy()
--        self.history = []
--        self.check_data_vec = self.compute_avg_vec(check_data_questions)
-+        self.current_stage = self.data[self.position]
-+        self.current_question = None
-         print("Hello, I am CV-Bot. I am here to help you create your CV.")
-         self.speak()
- 
--    def compute_avg_vec(self, list):
--        vector = np.array([nlp(elem).vector for elem in list]).mean(axis=0)
--        return vector
--
--    def get_current_stage(self):
--        stage, _ = self.history[-1]
--        return stage
--
--    def get_previous_stage(self):
--        if len(self.history) > 1:
--            stage, _ = self.history[-1]
--            return stage
--        else:
--            return None  # Todo add error handling
--
--    def add_new_stage(self, position):
--        self.history.append((position, []))
--
--    def get_current_question(self):
--        _, questions = self.history[-1]
--        if questions:
--            return questions[-1]
--        else:
--            None  # Todo add error handling
--
--    def get_previous_question(self):
--        _, questions = self.history[-1]
--        if len(questions) > 1:
--            return questions[-2]
--        else:
--            None  # Todo add error handling
--
--    def add_question_to_history(self, question):
--        self.history[-1][1].append(question)
--
--    def handle_error(self, user_input, type):
--        if type == check_data_error:
--            print("Sorry unfortunately we couldn't find the data you were looking for.")
--            new_input = input("Do you want to continue or try again?")
--            if new_input.__contains__("again"):
--                return self.classify(input("Please state your request again."))
--            else:
--                return None
--    # ask the question according to the current position
-+    # ask according to the current position
-     def ask(self, question):
-         # get the answer from the user or from the debug data
--        current_question = self.data[self.get_current_stage()][self.get_current_question()]
-         if debug:
--            print(current_question[question_num])
--            answer = debug_data[self.get_current_stage()][question]
-+            answer = debug_data[self.position][question]
-         else:
--            answer = input(current_question[question_num] + "\n")
--        if debug:
--            print(answer)
-+            answer = input(self.current_question[question_num] + "\n")
-         return answer
- 
--    def listen(self, input):
--        ...
--        # wait as long as keyboard is pressed
--
-     # agent starts to speak with user
-     def speak(self):
-         for position in self.data.keys():
--            # add the new stage to the history
--            self.add_new_stage(position)
--            # get the value of the dict of the current stage (eg, Name, Birthdate ...)
--            current_stage = self.data[self.get_current_stage()]
-+            self.position = position
-+            self.current_stage = self.data[position]
-             # go through all questions for the current stage, e.g. What is your name?
--            for question in current_stage:
--                self.add_question_to_history(question)
--                current_question = current_stage[question]
--                if question == "E-Mail" or question == "Address":
--                    processed_input = current_question[fun_num](self.ask(question))
--                else:
--                    processed_input = self.understanding(self.ask(question))
--                    self.map_input_to_data(processed_input)
-+            for question in self.current_stage:
-+                # get processed input by user
-+                self.current_question = self.current_stage[question]
-+                processed_input = self.understanding(self.ask(question))
-+
-+                # store data
-+                data_dict = self.current_question[data_store]
-+                data_dict[list(data_dict)[0]] = processed_input
-+
-+                print(data)
-+
-+                # education and working experience
-+                self.sev_bullet_points()
- 
-     def understanding(self, user_input):
-         input_type = self.classify(user_input)
--        if input_type == "answer":
--            return self.get_data(user_input)
--        else:
--            print_data(input_type)
--            return self.understanding(self.ask(self.get_current_question()))
-+        return self.get_data(input_type, user_input)
- 
--    # Possible returns are "answer" or the stage that is supposed to get printed
-     def classify(self, user_input):
--        user_input_vec = np.array(nlp(user_input).vector)
--        cosine = np.dot(user_input_vec, self.check_data_vec) / (norm(user_input_vec) * norm(self.check_data_vec))
--        if cosine > 0.3:
--            if any(e in user_input for e in check_prev):
--                return self.get_previous_stage()
--            else:
--                for key in self.data.keys():
--                    if user_input.__contains__(key):
--                        return key
--                return self.handle_error(self, user_input, check_data_error)
-+        # Todo Use a model to decide
-         return "answer"
- 
--    def get_data(self, input):
-+    def get_data(self, input_type, input):
-         user_data = []
--        # check if we are only looking for regex and not the SpaCy model
--        current_question = self.data[self.get_current_stage()][self.get_current_question()]
--        necessary_entities = [element for innerList in current_question[fun_num].keys() for element in
--                              innerList]
--        doc = nlp(input)
--        for entity in doc.ents:
--            for type in necessary_entities:
--                if entity.label_ == type:
--                    user_data.append(entity.text)
--        print(user_data)
-+        if input_type == 'answer':
-+            # check if we are only looking for regex and not the SpaCy model
-+            necessary_entities = [element for innerList in self.current_question[fun_num].keys() for element in innerList]
-+            doc = nlp(input)
-+            for entity in doc.ents:
-+                for type in necessary_entities:
-+                    if entity.label_ == type:
-+                        user_data.append(entity.text)
-         return user_data
- 
-+    def map_input_to_data(self, user_data):
-+        print("Needs to mapped")
-+
-+    def sev_bullet_points(self):
-+        counter = 0
-+        if self.position == 'Education' or self.position == 'Experience':
-+            while True:
-+                inp = input('If you would like to add another ' + str(self.position) + 'step enter the '
-+                                                                                       'information in '
-+                                                                                       'the same format '
-+                                                                                       'as already done. '
-+                                                                                       'Otherwise press '
-+                                                                                       'Enter' + "\n")
-+
-+                if inp == "":
-+                    break;
-+                else:
-+                    # process the given input
-+                    processed_input = self.understanding(inp)
-+
-+                    # create new dictionary element
-+                    print(self.current_stage)
-+                    self.current_stage[('Step' + str(counter + 2))] = [None,
-+                                                                       {("DATE", "DATE", "CARDINAL"): processed_input}]
-+                print(data)
-     # if "DATE" in types:
-     #     answer = answer.replace(".", "/")
-     #     answer = answer.replace(",", "/")
-@@ -149,7 +112,4 @@
-     #         len(data)) + "data, while expecting " + str(
-     #         numData) + " \n The found data are " + data_text + "\n the data in the doc is " + doc_data_text)
-     # else:
--    #     return format_fun(data)
--
--    def map_input_to_data(self, user_data):
--        print("Needs to mapped")
-+    #     return format_fun(data)
-\ No newline at end of file
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" name=\"Changes\" comment=\"add readme.md\">\n      <change beforePath=\"$PROJECT_DIR$/dialog.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/dialog.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/utils.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/utils.py\" afterDir=\"false\" />\n    </list>\n    <list id=\"d940c511-92f0-4fb1-bee5-601ff7e2efda\" name=\"Changes by danielbier\" comment=\"\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Jupyter Notebook\" />\n        <option value=\"Python Script\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2GaQfpjOf9rEUTWkdg4KFLWfbUW\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;codeWithMe.voiceChat.enabledByDefault&quot;: &quot;false&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/kraus/OneDrive/Uni/Semester 5 - Barcelona/Term 1/AI/P-03/reinforcement&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;\n  }\n}</component>\n  <component name=\"RunManager\">\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"CV-Bot\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"true\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\n      <module name=\"CV-Bot\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" name=\"Changes\" comment=\"\" />\n      <created>1666624320371</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1666624320371</updated>\n      <workItem from=\"1666624324547\" duration=\"3914000\" />\n      <workItem from=\"1666707462917\" duration=\"24000\" />\n      <workItem from=\"1667220446521\" duration=\"2463000\" />\n      <workItem from=\"1668082266353\" duration=\"57000\" />\n      <workItem from=\"1668349949463\" duration=\"9077000\" />\n      <workItem from=\"1668771685506\" duration=\"47000\" />\n      <workItem from=\"1669282439560\" duration=\"10646000\" />\n      <workItem from=\"1669300612743\" duration=\"27000\" />\n      <workItem from=\"1669389294498\" duration=\"687000\" />\n      <workItem from=\"1669464900000\" duration=\"5396000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"add readme.md\">\n      <created>1667490598481</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1667490598481</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"add readme.md\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"add readme.md\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/main.py</url>\n          <line>6</line>\n          <option name=\"timeStamp\" value=\"5\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\n          <url>file://$PROJECT_DIR$/dialog.py</url>\n          <line>105</line>\n          <option name=\"timeStamp\" value=\"15\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/CV_Bot$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1669469507450\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\n  </component>\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 6bbf81ab52715f87377532a639a7eff9ce22e93d)
-+++ b/.idea/workspace.xml	(date 1669470758421)
-@@ -152,13 +152,13 @@
-         </line-breakpoint>
-         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
-           <url>file://$PROJECT_DIR$/dialog.py</url>
--          <line>105</line>
-+          <line>54</line>
-           <option name="timeStamp" value="15" />
-         </line-breakpoint>
-       </breakpoints>
-     </breakpoint-manager>
-   </component>
-   <component name="com.intellij.coverage.CoverageDataManagerImpl">
--    <SUITE FILE_PATH="coverage/CV_Bot$main.coverage" NAME="main Coverage Results" MODIFIED="1669469507450" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-+    <SUITE FILE_PATH="coverage/CV_Bot$main.coverage" NAME="main Coverage Results" MODIFIED="1669470214203" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" name=\"Changes\" comment=\"Some stuff\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/dialog.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/dialog.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/utils.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/utils.py\" afterDir=\"false\" />\r\n    </list>\r\n    <list id=\"d940c511-92f0-4fb1-bee5-601ff7e2efda\" name=\"Changes by danielbier\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Jupyter Notebook\" />\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2GaQfpjOf9rEUTWkdg4KFLWfbUW\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;codeWithMe.voiceChat.enabledByDefault&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/kraus/OneDrive/Uni/Semester 5 - Barcelona/Term 1/AI/P-03/reinforcement&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;configurable.group.language&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"CV-Bot\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"true\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"CV-Bot\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"5649b55e-c08f-47c7-b4e3-720abb9a88ae\" name=\"Changes\" comment=\"\" />\r\n      <created>1666624320371</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1666624320371</updated>\r\n      <workItem from=\"1666624324547\" duration=\"3914000\" />\r\n      <workItem from=\"1666707462917\" duration=\"24000\" />\r\n      <workItem from=\"1667220446521\" duration=\"2463000\" />\r\n      <workItem from=\"1668082266353\" duration=\"57000\" />\r\n      <workItem from=\"1668349949463\" duration=\"9077000\" />\r\n      <workItem from=\"1668771685506\" duration=\"47000\" />\r\n      <workItem from=\"1669282439560\" duration=\"10646000\" />\r\n      <workItem from=\"1669300612743\" duration=\"27000\" />\r\n      <workItem from=\"1669389294498\" duration=\"687000\" />\r\n      <workItem from=\"1669464900000\" duration=\"7630000\" />\r\n      <workItem from=\"1669628196853\" duration=\"6406000\" />\r\n      <workItem from=\"1669713829862\" duration=\"16000\" />\r\n      <workItem from=\"1669808863620\" duration=\"12018000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"add readme.md\">\r\n      <created>1667490598481</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1667490598481</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"add readme.md\">\r\n      <created>1669470813553</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669470813553</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"add readme.md\">\r\n      <created>1669470895329</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669470895329</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"add printing etc\">\r\n      <created>1669478066049</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669478066049</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"question for missing data\">\r\n      <created>1669645453028</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669645453028</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Some stuff\">\r\n      <created>1669647976514</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669647976514</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Some stuff\">\r\n      <created>1669651321774</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669651321774</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"add readme.md\" />\r\n    <MESSAGE value=\"add printing etc\" />\r\n    <MESSAGE value=\"question for missing data\" />\r\n    <MESSAGE value=\"Some stuff\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Some stuff\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/dialog.py</url>\r\n          <line>168</line>\r\n          <option name=\"timeStamp\" value=\"6\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/main.py</url>\r\n          <line>6</line>\r\n          <option name=\"timeStamp\" value=\"7\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/dialog.py</url>\r\n          <line>125</line>\r\n          <option name=\"timeStamp\" value=\"9\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/dialog.py</url>\r\n          <line>181</line>\r\n          <option name=\"timeStamp\" value=\"10\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/dialog.py</url>\r\n          <line>245</line>\r\n          <option name=\"timeStamp\" value=\"11\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/CV_Bot$main.coverage\" NAME=\"main Coverage Results\" MODIFIED=\"1669821223740\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6b8bfa43e181c317ba88c2ef1f5002c73bf404e1)
+++ b/.idea/workspace.xml	(date 1670090889994)
@@ -5,8 +5,23 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="5649b55e-c08f-47c7-b4e3-720abb9a88ae" name="Changes" comment="Some stuff">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_14_56_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_14_56__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_16_27_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2022_16_27__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_13_10_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_13_17_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_14_47_[Changes]1/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_14_55_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22,_15_24_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_10__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__13_17__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_47__Changes_1.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__14_55__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_22__15_24__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/dialog.py" beforeDir="false" afterPath="$PROJECT_DIR$/dialog.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/readme.md" beforeDir="false" afterPath="$PROJECT_DIR$/readme.md" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/utils.py" beforeDir="false" afterPath="$PROJECT_DIR$/utils.py" afterDir="false" />
     </list>
     <list id="d940c511-92f0-4fb1-bee5-601ff7e2efda" name="Changes by danielbier" comment="" />
@@ -116,7 +131,9 @@
       <workItem from="1669464900000" duration="7630000" />
       <workItem from="1669628196853" duration="6406000" />
       <workItem from="1669713829862" duration="16000" />
-      <workItem from="1669808863620" duration="12018000" />
+      <workItem from="1669808863620" duration="12865000" />
+      <workItem from="1670060954323" duration="2146000" />
+      <workItem from="1670084078007" duration="3067000" />
     </task>
     <task id="LOCAL-00001" summary="add readme.md">
       <created>1667490598481</created>
@@ -197,7 +214,7 @@
       <breakpoints>
         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
           <url>file://$PROJECT_DIR$/dialog.py</url>
-          <line>168</line>
+          <line>161</line>
           <option name="timeStamp" value="6" />
         </line-breakpoint>
         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
@@ -207,23 +224,23 @@
         </line-breakpoint>
         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
           <url>file://$PROJECT_DIR$/dialog.py</url>
-          <line>125</line>
-          <option name="timeStamp" value="9" />
+          <line>174</line>
+          <option name="timeStamp" value="10" />
         </line-breakpoint>
         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
           <url>file://$PROJECT_DIR$/dialog.py</url>
-          <line>181</line>
-          <option name="timeStamp" value="10" />
+          <line>247</line>
+          <option name="timeStamp" value="11" />
         </line-breakpoint>
         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
           <url>file://$PROJECT_DIR$/dialog.py</url>
-          <line>245</line>
-          <option name="timeStamp" value="11" />
+          <line>36</line>
+          <option name="timeStamp" value="12" />
         </line-breakpoint>
       </breakpoints>
     </breakpoint-manager>
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/CV_Bot$main.coverage" NAME="main Coverage Results" MODIFIED="1669821223740" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
+    <SUITE FILE_PATH="coverage/CV_Bot$main.coverage" NAME="main Coverage Results" MODIFIED="1670084726165" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
   </component>
 </project>
\ No newline at end of file
